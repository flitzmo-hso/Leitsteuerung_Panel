[{"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/index.js":"1","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/App.js":"2","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/reportWebVitals.js":"3","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard.js":"4","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich.js":"5","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/footer.js":"6","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders.js":"7","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots.js":"8","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/FAQ.js":"9","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ManualOrder.js":"10","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/Kontakt.js":"11","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/TabChange.js":"12","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/KPI_Auslastung.js":"13","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Uhrzeit.js":"14","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Map/Map.js":"15","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Auftragsstatus.js":"16","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Roboterstatus.js":"17","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/DoneOrders.js":"18","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/CanceledOrders.js":"19","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ActiveOrders.js":"20","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/OpenOrders.js":"21","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/ManageRobots.js":"22","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotStates.js":"23","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotTabChange.js":"24","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/WaitingOrders.js":"25"},{"size":500,"mtime":1623771871150,"results":"26","hashOfConfig":"27"},{"size":8699,"mtime":1623771903726,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1623268860043,"results":"29","hashOfConfig":"27"},{"size":2543,"mtime":1623657884804,"results":"30","hashOfConfig":"27"},{"size":267,"mtime":1623274121115,"results":"31","hashOfConfig":"27"},{"size":134,"mtime":1623330377876,"results":"32","hashOfConfig":"27"},{"size":2997,"mtime":1624029750443,"results":"33","hashOfConfig":"27"},{"size":208,"mtime":1623675697303,"results":"34","hashOfConfig":"27"},{"size":942,"mtime":1623273243564,"results":"35","hashOfConfig":"27"},{"size":6549,"mtime":1624002449674,"results":"36","hashOfConfig":"27"},{"size":231,"mtime":1623273876779,"results":"37","hashOfConfig":"27"},{"size":4429,"mtime":1624002300664,"results":"38","hashOfConfig":"27"},{"size":2972,"mtime":1623395961440,"results":"39","hashOfConfig":"27"},{"size":611,"mtime":1623962380429,"results":"40","hashOfConfig":"27"},{"size":144,"mtime":1623397454972,"results":"41","hashOfConfig":"27"},{"size":4299,"mtime":1624024332325,"results":"42","hashOfConfig":"27"},{"size":3404,"mtime":1623672240824,"results":"43","hashOfConfig":"27"},{"size":2458,"mtime":1624025197719,"results":"44","hashOfConfig":"27"},{"size":3890,"mtime":1624024077348,"results":"45","hashOfConfig":"27"},{"size":2465,"mtime":1623762060780,"results":"46","hashOfConfig":"27"},{"size":6589,"mtime":1624024099936,"results":"47","hashOfConfig":"27"},{"size":4081,"mtime":1624004611469,"results":"48","hashOfConfig":"27"},{"size":3246,"mtime":1623675655670,"results":"49","hashOfConfig":"27"},{"size":2769,"mtime":1623675658150,"results":"50","hashOfConfig":"27"},{"size":5741,"mtime":1624004599665,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"jf4ow2",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"54"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"88"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/index.js",[],["106","107"],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/App.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/reportWebVitals.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/footer.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders.js",["108","109"],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/FAQ.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ManualOrder.js",["110"],"import React, { useState } from \"react\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n//import Paper from '@material-ui/core/Paper';\n\nexport default function ManualOrder() {\n\n //const [DeliveryVisibility, setDeliveryVisibility] = useState(\"inline\");\n //const [LoopVisibility, setLoopVisibility] = useState(\"none\");\n\n\n    /*{\"task_type\": \"Delivery\", \"start_time\": 0, \"priority\": 0, \n    \"description\": { \"dropoff_ingestor\": \"coke_ingestor\", \"dropoff_place_name\": \"hardware_2\",\"pickup_dispenser\": \n    \"coke_dispenser\", \"pickup_place_name\": \"pantry\" } }) */\n\n  function getFormValues(){\n\n    //Delivery\n    var startzeit = document.getElementById('startzeit').value;\n    var prio = document.getElementById('prio').value;\n    var coordinatefrom = document.getElementById('coordinatefrom').value; \n    var coordinateto = document.getElementById('coordinateto').value; \n    var pickupdispenser = document.getElementById('pickupdispenser').value; \n    var dropoffingestor = document.getElementById('dropoffingestor').value; \n\n    //Loop\n    //var auftragstyp = document.getElementById('auftragstyp').value; \n    //var startLoc = document.getElementById('startLoc').value; //Loop\n    //var endLoc = document.getElementById('endLoc').value; //Loop\n    //var numberLoops = document.getElementById('numberLoops').value; //Loop\n\n\n\n    //Delivery-Order\n\n    if (startzeit === '' || prio === '' || coordinatefrom === '' || coordinateto === '' || pickupdispenser === ''|| dropoffingestor === '')\n        { return undefined; }\n\n    /*\n        var obj = {}\n    obj['task_type'] = \"Delivery\"; obj['start_time'] = parseInt(startzeit); obj['priority'] = parseInt(prio); \n    obj[\"description\"] = {\"dropoff_ingestor\": dropoffingestor, \"dropoff_place_name\": coordinateto, \"pickup_dispenser\": \n    pickupdispenser, \"pickup_place_name\": coordinatefrom }; */\n\n    var obj = {\"task_type\": \"Delivery\",\"start_time\": parseInt(startzeit), \"priority\": parseInt(prio),\n    \"description\": {\"dropoff_ingestor\": dropoffingestor, \"dropoff_place_name\": coordinateto,\n    \"pickup_dispenser\": pickupdispenser, \"pickup_place_name\": coordinatefrom }}\n\n\n\n    //Loop Order\n    /*if (auftragstyp === \"Loop\") {\n\n      if(startzeit === '' || prio === '' || numberLoops === '' || \n         numberLoops === 0 || startLoc === '' || endLoc === '')  { return undefined;} \n  \n      obj['task_type'] = \"Loop\"; obj['start_time'] = parseInt(startzeit); obj['priority'] = parseInt(prio);\n      obj['description'] = {\"num_loops\": parseInt(numberLoops) , \"start_name\": startLoc, \"finish_name\": endLoc};\n   \n    } */\n    \n    return obj;\n\n  } \n\n  function sendToAgv(){\n    \n    var obj = getFormValues();\n    if(obj === undefined || obj.length === 0) {alert(\"Bitte richtige Daten eingeben.\"); return;} \n    console.log(\"Auftrag:\", obj)\n\n\n   axios.post('http://0.0.0.0:8080/submit_task', obj)\n    .then(res => {\n      if(res.data === undefined || res.data.length === 0)  return;\n    console.log(\"Returned Task ID:\", res.data['task_id']);\n\n    var taskId = res.data['task_id']\n\n    //Put orders to DB\n    PutOrderToDb(obj, taskId);  \n  \n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n        alert(\"Fehler beim Auftrag übermitteln.\");  \n  \n    }) \n\n    return;\n  }\n\n  function insertMapping(taskid, orderId, sessionId) {\n\n    console.log(\"TaskId:\", taskid, \"OrderId\", orderId, \"SessionId:\", sessionId)\n    \n    var obj = { \"OM_SESSIONID\": parseInt(sessionId), \"OM_DELIVERYID\": taskid, \"OM_O_ID\": parseInt(orderId), \"OM_OT_ID\":  2};\n\n    axios.post('http://0.0.0.0:8080/insertMapping', obj)\n    .then(res => {\n\n    alert(\"Erfolgreich übermittelt.\"); \n  \n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n        alert(\"Fehler.\");  \n  \n    }) \n\n  }\n\n\n  function PutOrderToDb(objVal, taskId){\n\n    axios.post('http://0.0.0.0:8080/postOrderManual', objVal)\n    .then(res => {\n    console.log(\"DB RESPONSE:\", res.data[0]);\n\n      insertMapping(taskId, res.data[0][1], res.data[0][2]);\n   \n  \n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n        alert(\"Fehler.\");  \n  \n    }) \n\nreturn;\n  }\n \n  //Visibility of input fields for specific order typ\n  /*function dropDownChange(newValue){\n\n    if(newValue === undefined || newValue === null) return;\n\n    //Loop\n    if (newValue === \"Loop\") {\n      setDeliveryVisibility(\"none\");\n      setLoopVisibility(\"inline\");\n    }\n    \n    //Delivery\n    if (newValue === \"Delivery\") {\n      setDeliveryVisibility(\"inline\");\n      setLoopVisibility(\"none\");\n    }\n  } */\n\n  return (\n    <div align=\"left\" justify=\"left\" alignItems=\"left\">\n <p>Manueller Fahrauftrag</p>\n <table > \n      {/*<tr>\n        <td colspan=\"1\" >\n        <select name=\"auftragstyp\"  id=\"auftragstyp\" onChange={e => dropDownChange(e.target.value)}>\n            <option  value=\"Delivery\"> Delivery</option>\n            <option  value=\"Loop\" >Loop</option>\n\n          </select>\n          \n          </td> \n      </tr>*/}\n\n      <tr >\n        <td colspan=\"1\"> <input defaultValue=\"0\" type=\"number\" id=\"startzeit\" /> Startzeit (Minuten von jetztab)</td>\n      </tr>\n      <tr >\n        <td colspan=\"1\"> <input defaultValue=\"0\" type=\"number\" id=\"prio\" /> Priorität </td>\n      </tr>\n      <tr >\n        <td colspan=\"1\"> <input  defaultValue=\"pantry\"  type=\"text\" id=\"coordinatefrom\" /> Koordinate von</td>\n      </tr>\n      <tr >\n        <td colspan=\"1\"> <input defaultValue=\"hardware_2\" type=\"text\" id=\"coordinateto\" /> Koordinate zu</td>\n      </tr>\n      <tr >\n        <td colspan=\"1\"> <input defaultValue=\"coke_dispenser\" type=\"text\" id=\"pickupdispenser\" /> Abholpunkt</td>\n      </tr>\n      <tr >\n        <td colspan=\"1\"> <input defaultValue=\"coke_ingestor\" type=\"text\" id=\"dropoffingestor\" /> Abwurfpunkt</td>\n      </tr>\n      {/*\n      <tr id = \"Loop\" >\n        <td colspan=\"1\" style={{display: LoopVisibility}}> <input type=\"text\" id=\"startLoc\" /> Start-Location</td>\n      </tr>\n      <tr id = \"Loop\" >\n        <td colspan=\"1\" style={{display: LoopVisibility}}> <input type=\"text\" id=\"endLoc\" /> End-Location</td>\n      </tr>\n      <tr id = \"Loop\" >\n        <td colspan=\"1\" style={{display: LoopVisibility}}> <input type=\"number\" id=\"numberLoops\" />Nummer an Loops</td>\n      </tr> */}\n      <tr >\n        <br></br>\n      <Button \n    //variant=\"contained\" \n    style={{backgroundColor: \"gray\"}}\n    onClick={sendToAgv} \n    title=\"Mit Klick auf diesen Button werden manuelle Fahraufträge weitergegeben.\" >\n    Absenden\n  </Button>\n      </tr>\n  </table>\n    </div>\n    \n  );\n}","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/Kontakt.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/TabChange.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/KPI_Auslastung.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Uhrzeit.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Map/Map.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Auftragsstatus.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Roboterstatus.js",[],["111","112"],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/DoneOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/CanceledOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ActiveOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/OpenOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/ManageRobots.js",["113"],"import React, { useState, useEffect, forwardRef } from \"react\";\n//import axios from \"axios\";\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nexport default function ManageRobots() {\n\n//Event if data changed  \nuseEffect(() => { LoadRobots(); });\n\nconst [allData, setAllData] = useState([]); \n  \n\nconst [columnsRobots, /* setColumnsColors */] = useState([\n    { title: 'Mat-Bestellnr.', field: 'prodmat_id', editable: 'never' },\n    { title: 'Charge', field: 'chargen_nr', editable: 'never' },\n    { title: 'Menge', field: 'quantity', editable: 'never' },\n    { title: 'Restmenge', field: 'RES_QTY', editable: 'onUpdate', cellStyle: {border: \"5px, #000000\", fontWeight: \"bold\", fontStyle: \"italic\", backgroundColor: \"#e3e3e3\"} },\n    { title: 'PPML', field: 'ppml', editable: 'never' },\n    { title: 'Viskosität', field: 'viscosity', editable: 'never' },\n    { title: 'Delta_e', field: 'delta_e', editable: 'never' },\n  ]);\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst options = {rowsPerPage: 5, customToolbarSelect: () => { }, selectableRows: false, download: false };\n\n//Load data  \nfunction LoadRobots(){\n\n    /*axios.get('http://0.0.0.0:8080/getDBOrders?status=4') \n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n      //setAllData(undefined);\n      return;\n    }\n\n   // if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n    console.log(\"Data:\", res.data);    \n    //setAllData(res.data); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    }) */\n}\n\n\n//Check if old data = new data\n/*function DataAreEqual(data, sortedOrders){\nif(data.sort().join(',') === sortedOrders.sort().join(',')){\n  return true;\n  }\n  else return false;\n} */\n\n\n\n  return (\n<div style={{ padding: '0px'}}>\n  <MaterialTable\n        title=\"Roboter\"\n        icons={tableIcons}\n        columns={columnsRobots}\n        data={allData} \n        options={options}/>\n  <br></br>\n</div>\n\n  );\n}\n","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotStates.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotTabChange.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/WaitingOrders.js",[],{"ruleId":"114","replacedBy":"115"},{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","severity":1,"message":"119","line":18,"column":6,"nodeType":"120","endLine":18,"endColumn":8,"suggestions":"121"},{"ruleId":"122","severity":1,"message":"123","line":68,"column":48,"nodeType":"124","messageId":"125","endLine":68,"endColumn":56},{"ruleId":"122","severity":1,"message":"126","line":1,"column":17,"nodeType":"124","messageId":"125","endLine":1,"endColumn":25},{"ruleId":"114","replacedBy":"127"},{"ruleId":"116","replacedBy":"128"},{"ruleId":"122","severity":1,"message":"129","line":25,"column":17,"nodeType":"124","messageId":"125","endLine":25,"endColumn":27},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTaskStates'. Either include it or remove the dependency array.","ArrayExpression",["132"],"no-unused-vars","'statusNr' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.",["130"],["131"],"'setAllData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"133","fix":"134"},"Update the dependencies array to be: [getTaskStates]",{"range":"135","text":"136"},[461,463],"[getTaskStates]"]