[{"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/index.js":"1","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/App.js":"2","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/reportWebVitals.js":"3","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard.js":"4","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich.js":"5","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/footer.js":"6","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders.js":"7","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots.js":"8","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/FAQ.js":"9","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ManualOrder.js":"10","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/Kontakt.js":"11","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/TabChange.js":"12","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/KPI_Auslastung.js":"13","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Uhrzeit.js":"14","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Map/Map.js":"15","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Auftragsstatus.js":"16","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Roboterstatus.js":"17","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/DoneOrders.js":"18","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/CanceledOrders.js":"19","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ActiveOrders.js":"20","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/ManageRobots.js":"21","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotStates.js":"22","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotTabChange.js":"23","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/WaitingOrders.js":"24","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ErrorOrders.js":"25","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Chart.js":"26","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ProgressTime.js":"27","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/AutomaticOrders.js":"28"},{"size":500,"mtime":1624266779051,"results":"29","hashOfConfig":"30"},{"size":8858,"mtime":1624615446179,"results":"31","hashOfConfig":"30"},{"size":362,"mtime":1624266779051,"results":"32","hashOfConfig":"30"},{"size":2992,"mtime":1624627157061,"results":"33","hashOfConfig":"30"},{"size":267,"mtime":1624266779051,"results":"34","hashOfConfig":"30"},{"size":241,"mtime":1624623683961,"results":"35","hashOfConfig":"30"},{"size":4330,"mtime":1624886227166,"results":"36","hashOfConfig":"30"},{"size":208,"mtime":1624266779051,"results":"37","hashOfConfig":"30"},{"size":944,"mtime":1624615112967,"results":"38","hashOfConfig":"30"},{"size":7695,"mtime":1624623754867,"results":"39","hashOfConfig":"30"},{"size":354,"mtime":1624615342588,"results":"40","hashOfConfig":"30"},{"size":5176,"mtime":1624722841485,"results":"41","hashOfConfig":"30"},{"size":3000,"mtime":1624617677727,"results":"42","hashOfConfig":"30"},{"size":780,"mtime":1624281214023,"results":"43","hashOfConfig":"30"},{"size":360,"mtime":1624964436084,"results":"44","hashOfConfig":"30"},{"size":5043,"mtime":1624623754871,"results":"45","hashOfConfig":"30"},{"size":3404,"mtime":1623672240824,"results":"46","hashOfConfig":"47"},{"size":2469,"mtime":1624615961182,"results":"48","hashOfConfig":"30"},{"size":6173,"mtime":1624629910458,"results":"49","hashOfConfig":"30"},{"size":2567,"mtime":1624617970778,"results":"50","hashOfConfig":"30"},{"size":3981,"mtime":1624266779051,"results":"51","hashOfConfig":"30"},{"size":3246,"mtime":1624266779051,"results":"52","hashOfConfig":"30"},{"size":2864,"mtime":1624605408095,"results":"53","hashOfConfig":"30"},{"size":5103,"mtime":1624623754867,"results":"54","hashOfConfig":"30"},{"size":7445,"mtime":1624627396976,"results":"55","hashOfConfig":"30"},{"size":2515,"mtime":1624618375950,"results":"56","hashOfConfig":"30"},{"size":1190,"mtime":1624617166240,"results":"57","hashOfConfig":"30"},{"size":7865,"mtime":1624886687480,"results":"58","hashOfConfig":"30"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"1aldcv0",{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"61"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"61"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"61"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"97"},"jf4ow2",{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"61"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/index.js",[],["121","122"],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/App.js",["123"],"import React, {useEffect} from \"react\";\nimport clsx from 'clsx';\nimport { makeStyles, useTheme} from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport List from '@material-ui/core/List';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderSpecialIcon from '@material-ui/icons/FolderSpecial';\nimport HomeIcon from '@material-ui/icons/Home';\nimport MapIcon from '@material-ui/icons/Map';\nimport HelpIcon from '@material-ui/icons/Help';\nimport { Link } from 'react-router-dom';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Footer from './footer.js';\nimport RedditIcon from '@material-ui/icons/Reddit'\n\nimport logo from './Flitzmo_Logo.png';\n\n// Import Pages\nimport Dashboard from './components/Dashboard.js';\nimport Orders from './components/Orders.js';\nimport Robots from './components/Robots.js';\nimport Map from './components/Map/Map.js';\nimport Hilfebereich from './components/Hilfebereich.js';\nimport { logDOM } from \"@testing-library/react\";\n\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  hide: {\n    display: 'none',\n  },\n\n  activeTab:{\n    \"&$selected\": {\n      backgroundColor: \"#e68a00\",\n      color: \"black\"\n    },\n    \"&:hover\": {\n      backgroundColor: \"#eaeaea\",\n      color: \"black\"\n    },\n    \"&$selected:hover\": {\n      backgroundColor: \"#e68a00\",\n      color: \"black\"\n    } \n},\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n    whiteSpace: 'nowrap',\n  },\n  drawerOpen: {\n    width: drawerWidth,\n    color: 'black',\n    backgroundColor: '#ffffff',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerClose: {\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n     \n    }),\n    color: 'black',\n    backgroundColor: '#ffffff',\n    overflowX: 'hidden',\n    width: theme.spacing(7) + 1,\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9) + 1,\n    },\n  },\n  toolbar: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: theme.spacing(0, 1),\n    // necessary for content to be below app bar\n    ...theme.mixins.toolbar,\n  },\n\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing(3),\n    color:'#fff6e5',\n    backgroundColor:'white'\n  },\n\n  imageIcon: {\n    height: '100%'\n  },\n  iconRoot: {\n    textAlign: 'center'\n  },\n  selected: {}\n}));\n\n\nfunction App() {\n  \n  useEffect(() => {\n    console.log(\"Sicherheitsprüfungs-Loop - Wenn Endlosschleife, dann in App.js prüfen.\");\n      \n    if(window.location.href.endsWith(\"3000\")){\n      setSelectedIndex(0);\n    }\n    else if(window.location.href.endsWith(\"Orders\")){\n\n       setSelectedIndex(1);\n     } \n\n     else if(window.location.href.endsWith(\"Robots\")){\n\n      setSelectedIndex(2);\n     }\n    else if(window.location.href.endsWith(\"Map\")){\n\n      setSelectedIndex(3);\n    } \n    else if(window.location.href.endsWith(\"Helpdesk\")){\n\n      setSelectedIndex(4);\n    } \n    else if(window.location.href.endsWith(\"Einstellungen\")){\n\n      setSelectedIndex(5);\n    } \n     \n    }, []);\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [selectedIndex, setSelectedIndex] = React.useState(0);\n  const [open, setOpen] = React.useState(false);\n\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleListItemClick = (event, index) => {\n    setSelectedIndex(index)};\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n\n  return (\n    <div className={classes.root} >\n      <Router>\n     <CssBaseline /> \n      <AppBar style={{ background: '#00334d' }}\n        position=\"fixed\"\n        className={clsx(classes.appBar, {\n          [classes.appBarShift]: open,\n        })}\n      >\n          <Footer style={{backgroundColor: \"#fff6e5\"}}>\n      </Footer>\n        <Toolbar>\n          <IconButton\n            style={{color: '#fffff'}}\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            edge=\"start\"\n            className={clsx(classes.menuButton, {\n              [classes.hide]: open,\n            })}\n          >\n            <MenuIcon style={{fill: \"#fff6e5\"}}/>\n          </IconButton>\n          <h2 style={{ color: '#fffff'}}>Flitzmo Leitsteuerung</h2>\n  \n        </Toolbar>\n      </AppBar>\n    \n     \n      <Drawer \n        variant=\"permanent\"\n        className={clsx(classes.drawer, {\n          [classes.drawerOpen]: open,\n          [classes.drawerClose]: !open,\n        })}\n        classes={{\n          paper: clsx({\n            [classes.drawerOpen]: open,\n            [classes.drawerClose]: !open,\n          }),\n        }}\n      >\n              \n        <div className={classes.toolbar}>\n\n        <img height=\"50\"  src={logo} alt=\"Logo\"/>\n\n          <IconButton onClick={handleDrawerClose} style={{ color: '#e68a00'}}>\n            {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n          </IconButton>\n\n        </div>\n        <Divider />\n\n        <List >\n        <ListItem  button component={Link} to=\"/\" key=\"Dashboard\" className={classes.activeTab} selected={selectedIndex === 0}\n          onClick={event => handleListItemClick(event, 0)}\n        >\n            <ListItemIcon >\n              <HomeIcon style={{fill: \"#e68a00\"}} />\n            </ListItemIcon >\n            <ListItemText primary=\"Home\" />   \n         </ListItem>\n         <ListItem button component={Link} to=\"/Orders\" key=\"Orders\" className={classes.activeTab} selected={selectedIndex === 1}\n          onClick={event => handleListItemClick(event, 1)}>\n            <ListItemIcon>\n              <FolderSpecialIcon style={{fill: \"#e68a00\"}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Orders\" />   \n         </ListItem>\n         <ListItem button component={Link} to=\"/Robots\" key=\"Robots\" className={classes.activeTab} selected={selectedIndex === 2}\n          onClick={event => handleListItemClick(event, 2)}>\n            <ListItemIcon>\n              <RedditIcon style={{fill: \"#e68a00\"}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Robots\" />   \n         </ListItem>\n         <ListItem button component={Link} to=\"/Map\" key=\"Map\" className={classes.activeTab} selected={selectedIndex === 3}\n          onClick={event => handleListItemClick(event, 3)}>\n            <ListItemIcon>\n              <MapIcon style={{fill: \"#e68a00\"}}/>\n            </ListItemIcon>\n            <ListItemText primary=\"Map\" />   \n         </ListItem>\n        </List>\n        <Divider/>\n        <List>\n        <ListItem button component={Link} to=\"/Helpdesk\" key=\"Helpdesk\" className={classes.activeTab} selected={selectedIndex === 4}\n          onClick={event => handleListItemClick(event, 4)}>\n            <ListItemIcon>\n              <HelpIcon style={{fill: \"#e68a00\"}} />\n            </ListItemIcon>\n            <ListItemText primary=\"Helpdesk\" />   \n         </ListItem>  \n        </List>  \n        <Divider />\n   \n      </Drawer>\n   \n      <main className={classes.content} >\n        <div className={classes.toolbar} />\n        <Switch >\n            <Route exact path=\"/\" >\n              <Dashboard />\n            </Route>\n            <Route exact path=\"/Orders\">\n              <Orders />\n            </Route>\n            <Route exact path=\"/Robots\">\n              <Robots />\n            </Route>\n            <Route exact path=\"/Map\">\n              <Map />\n            </Route>\n            <Route exact path=\"/Helpdesk\">\n              <Hilfebereich />\n            </Route>\n            \n          </Switch>\n      </main>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/reportWebVitals.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard.js",["124"],"import React from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Container from '@material-ui/core/Container';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\n\nimport KpiAuslastung from './Dashboard/KPI_Auslastung.js';\nimport Uhrzeit from './Dashboard/Uhrzeit.js';\nimport ActiveOrders from './Dashboard/ActiveOrders.js'\nimport Chart from './Dashboard/Chart.js'\nimport ProgressTime from './Dashboard/ProgressTime.js'\n\n\n//Set Style\nconst drawerWidth = 240;\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n  },\n  container: {\n  },\n  paper: {\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n    height: \"auto\",\n    padding: \"50px\",\n  },\n  fixedHeight: {\n    height: \"100%\",\n  },\n}));\n\nexport default function Dashboard() {\n  const classes = useStyles();\n  const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <main className={classes.content}>\n        <div className={classes.appBarSpacer} />\n        <Container maxWidth=\"lg\" className={classes.container}>\n\n          <Grid container spacing={2}>\n\n            <Grid item xs={12} md={6} lg={9} >\n              <Paper className={classes.paper} elevation={0}>\n                \n              <ActiveOrders/>\n              </Paper>\n            </Grid>\n\n            <Grid item xs={12} md={6} lg={3}>\n            \n              <Paper className={classes.paper} style={{  padding: 0, marginBottom: 3, flexDirection: \"revert\"}} elevation={0}> \n                <p style={{color: \"#e68a00\", fontSize:\"20px\", fontWeight:\"bold\", padding:\"0\", alignItems:\"center\"}}>Auslastung</p>\n                  <KpiAuslastung/>  \n            \n              </Paper>\n              <Paper className={classes.paper} style={{  padding: 0, marginBottom: 3, flexDirection: \"revert\" }} elevation={0}>\n              <div style={{paddingLeft: \"6%\"}}>  <Uhrzeit/> </div>\n              </Paper>\n              <Paper className={classes.paper} style={{  padding: 0, margin: 1, flexDirection: \"revert\" }} elevation={0}>\n              <div style={{paddingLeft: \"6%\"}}>  <ProgressTime/> </div>\n              </Paper>\n            </Grid>  \n            </Grid>\n\n<Grid container spacing={2}>\n            <Grid item xs={12} md={12}>\n              <Paper className={classes.paper} elevation={0}>\n              <Chart/>\n               \n              </Paper>\n              </Grid>\n            </Grid>\n\n          \n        </Container>\n      </main>\n    </div>\n  );\n}","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/footer.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders.js",["125"],"import React, { useState, useEffect} from \"react\";\nimport TabChange from './Orders/TabChange.js';\nimport axios from \"axios\";\n \n\nexport default function Orders() {\n\nconst [allData, setAllData] = useState([]);\n\nvar sessionId;\n\nuseEffect(() => {\n   \n\n    const interval = setInterval(() => { getTaskStates() }, 2000)\n    return ()=> clearInterval(interval)\n  }, []);\n  \n\nfunction getTaskStates(){\n\n    axios.get('http://0.0.0.0:8080/task_list')\n    .then(res => {\n    console.log(\"Tasks:\", res.data); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n     \n      return;\n    }\n\n    var newData = [];\n\n    res.data.forEach(element => { //Convert response to right format\n        newData.push(element)\n    });\n\n    if (DataAreEqual(allData, newData)) return; //Check if data has changed   \n\n    updateOrderStatus(allData, newData); //Update Status of new orders\n\n    setAllData(newData); //Set new Data\n\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n}\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n\n  function updateOrderStatus(oldData, newData){  \n\n    if (sessionId  === undefined ){ setSessionId() } //Set sessionId by program init\n\n    //TODO : Hier in Zukunft nur die neuen Änderungen. Dazu OldData mit NewData vergleichen.\n    //Aktuell werden noch alle genommen.\n\n    sleep(1000).then(() => { \n\n      for (let element of newData)\n       {\n\n        var statusNr;\n\n        //STATUS Überprüfen, ob sie passen -> Pending ?! \n        if(element['state'] === \"Pending\") statusNr = 1; //open\n        else if(element['state'] === \"Active/Executing\") statusNr = 2; //in progress\n        else if(element['state'] === \"Completed\") statusNr = 3; // Finished\n        else if(element['state'] === \"Active/Cancelled\") statusNr = 4; //canceled\n        //else if(element['state'] === \"Cancelled\") statusNr = 4; //TODO: Nur Cancelled ohne Active?\n        else if(element['state'] === \"Queued\") statusNr = 5; //waiting\n        else if(element['state'] === \"Failed\") statusNr = 6; //Fehler\n       \n        if(statusNr === \"\" || sessionId === \"\" || element[\"task_id\"] === \"\" || element[\"robot_name\"] === \"\"  \n        || statusNr === undefined || sessionId === undefined || element[\"task_id\"] === undefined || element[\"robot_name\"] === undefined || \n          sessionId.length === 0 || element[\"task_id\"].length === 0 || element[\"robot_name\"].length === 0) continue;\n\n        var obj = {\"status\": statusNr, \"session_id\":  sessionId, \"task_id\": element[\"task_id\"], \"agv_id\": element[\"robot_name\"]}; \n\n        console.log(\"PUT OBJ:\", obj);\n\n        axios.put('http://0.0.0.0:8080/updateOrderStatus', obj)\n        .then(res => {\n          if(res.data === undefined || res.data.length === 0)  return;\n        console.log(\"Response:\", res.data);\n        \n      \n        })\n        .catch(err => {\n            console.log(err.message); //Error-Handling\n            cssMessage(\"Fehler beim Auftrag übermitteln.\", \"#9c2c2c\");       \n        })  \n        \n    }\n  });\n\n  } \n\n  function setSessionId(){\n\n      axios.get('http://0.0.0.0:8080/getSessionId')\n      .then(res => {\n      console.log(\"SessionId:\", res.data); //Data from Gateway\n\n      if(res.data.length === 0) { //Check if data is available\n      \n        return;\n      }\n      \n      sessionId = res.data;\n\n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n      })\n\n  }\n\n  //Success and error messages\nfunction cssMessage(message, color)\n{ //Set\n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"center\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = message;\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = color;\n\n  //Reset\n  sleep(4000).then(() => { \n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"right\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = \"Powered by ©Flitzmo\";\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = \"#004466\";\n  });\n}\n\n\n  //Check if old data = new data\n  function DataAreEqual(inputData, sortedOrders){\n    if(inputData.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n   }\n\n    return (\n        <div >\n         <TabChange/>\n        </div>\n    );\n\n}\n","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/FAQ.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ManualOrder.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Hilfebereich/Kontakt.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/TabChange.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/KPI_Auslastung.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Uhrzeit.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Map/Map.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Auftragsstatus.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Roboterstatus.js",[],["126","127"],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/DoneOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/CanceledOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ActiveOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/ManageRobots.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotStates.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/RobotTabChange.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/WaitingOrders.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ErrorOrders.js",["128","129"],"import React, { useState, useEffect} from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nexport default function ErrorOrders() {\n\n  const columns = [ \n   {name: \"O_ID\", label: \"Order-Nr\", options: {filter: true, sort: true, display: true}}, \n   {name: \"OT_DESC\", label: \"Order-Typ\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_TIMESTAMP\", label: \"Zeit\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_PRIO\", label: \"Priorität\",  options: {filter: true,  sort: true, display: true}}, \n   {name: \"O_WH_IDFROM\", label: \"von Lagerplatz\", options: {filter: false, sort: false, display: false}},\n   {name: \"O_WH_COORDINATEFROM\", label: \"von Koordinate\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_WH_IDTO\", label: \"nach Lagerplatz\", options: {filter: false, sort: true, display: false}},  \n   {name: \"O_WH_COORDINATETO\", label: \"nach Koordinate\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_DP_DELIVERYPOINTFROM\", label: \"Aufladepunkt\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_DP_DELIVERYPOINTTO\", label: \"Abladepunkt\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_FT_IDREQUIREMENT\", label: \"Benötiges Anbaugerät\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_OS_ID\", label: \"Status ID\",options: {filter: false, sort: false,display: false}},\n   {name: \"OS_DESC\", label: \"Status\",options: {filter: true,sort: true,display: true}} \n   ];\n\n  const options = {rowsPerPage: 5, customToolbarSelect: () => { }, filterType: 'checkbox', download: false, \n   onRowSelectionChange : (curRowSelected, allRowsSelected) => {rowSelectEvent(curRowSelected, allRowsSelected); }};\n  \n  const [allData, setAllData] = useState([]); \n  const [selectedData, setSelectedData] =  useState([]); \n\n  //Event if data changed\n  useEffect(() => { DatenLaden(); });\n  \n  //Load data\n  function DatenLaden(){\n    axios.get('http://0.0.0.0:8080/getDBOrders?status=6')\n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n      setAllData(undefined);\n      return;\n    }\n\n    if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n    console.log(\"Data:\", res.data);    \n    setAllData(res.data); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n  }\n\n  //Check if old data = new data\n  function DataAreEqual(data, sortedOrders){\n    if(data.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n    }\n\n  //Submit selected Table Orders\n  function SubmitOrders() {\n\n    console.log(\"Ausgewählte Datensätze:\", selectedData);\n\n    if(selectedData === undefined || selectedData.length === 0) {\n      alert(\"Bitte Datensatz auswählen!\"); return; \n    }\n\n    selectedData.forEach(element => {\n\n      var singleSubmits = filterSelectedData(element);\n\n      axios.post('http://0.0.0.0:8080/submit_task', singleSubmits)\n      .then(res => {\n      console.log(\"Returned Task ID:\", res.data['task_id']);\n\n      PutOrderToDb(singleSubmits, res.data['task_id']);  \n\n      cssMessage(\"Erfolgreich übermittelt.\", \"#4dff88\"); \n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n          cssMessage(\"Fehler beim Übermitteln.\", \"#9c2c2c\"); \n    \n      }) \n      \n    });\n      \n    }\n\n    function PutOrderToDb(objVal, taskId){\n\n      axios.post('http://0.0.0.0:8080/postOrderAutomatic', objVal)\n      .then(res => {\n      console.log(\"DB RESPONSE:\", res.data[0]);\n  \n        insertMapping(taskId, res.data[0][1], res.data[0][2]);\n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling  \n          cssMessage(\"Fehler beim Übermitteln.\", \"#9c2c2c\"); \n    \n      }) \n  \n  return;\n    }\n\n    function insertMapping(taskid, orderId, sessionId) {\n\n      console.log(\"TaskId:\", taskid, \"OrderId\", orderId, \"SessionId:\", sessionId)\n      \n      var obj = { \"OM_SESSIONID\": parseInt(sessionId), \"OM_DELIVERYID\": taskid, \"OM_O_ID\": parseInt(orderId), \"OM_OT_ID\":  1};\n  \n      axios.post('http://0.0.0.0:8080/insertMapping', obj)\n      .then(res => {\n  \n        cssMessage(\"Erfolgreich übermittelt.\", \"#4dff88\"); \n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling \n          cssMessage(\"Fehler beim Übermitteln.\", \"#9c2c2c\"); \n    \n      }) \n  \n    } \n\n    //Sleep for asynchronous calls\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\n    //Success and error messages\nfunction cssMessage(message, color)\n{ //Set\n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"center\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = message;\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = color;\n\n  //Reset\n  sleep(4000).then(() => { \n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"right\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = \"Powered by ©Flitzmo\";\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = \"#004466\";\n  });\n}\n\n    function filterSelectedData(element){\n \n      //Delivery Order \n      console.log(element);\n\n        if (element[\"O_DP_DELIVERYPOINTTO\"] === '' || element[\"O_DP_DELIVERYPOINTFROM\"]  === '' || element[\"O_WH_COORDINATETO\"] === '' || element[\"O_WH_COORDINATEFROM\"] === '')  return undefined;\n\n        var obj = {\"task_type\": \"Delivery\", \"start_time\": 0, \"priority\": 0,\n            \"description\": {\"dropoff_ingestor\": element[\"O_DP_DELIVERYPOINTTO\"], \"dropoff_place_name\": element[\"O_WH_COORDINATETO\"],\n            \"pickup_dispenser\": element[\"O_DP_DELIVERYPOINTFROM\"], \"pickup_place_name\": element[\"O_WH_COORDINATEFROM\"] }};\n\n        console.log(\"Filtered Obj:\", obj);\n\n\n      //Loop Order\n      /*if (element[\"task_type\"] === \"Loop\") {\n\n        if(element[\"start_time\"] === '' || element[\"priority\"]  === '' || element[\"num_loops\"]  === ''  || \n        element[\"num_loops\"]  === 0 ||  element[\"start_name\"]  === '' ||  element[\"finish_name\"]  ===  '')  return undefined; \n\n        obj['task_type'] = \"Loop\"; obj['start_time'] = parseInt(element[\"start_time\"]); \n        obj['priority'] = parseInt(element[\"priority\"]); \n        obj['description'] = {\"num_loops\": parseInt(element[\"num_loops\"]) , \"start_name\": element[\"start_name\"], \"finish_name\": element[\"finish_name\"]};\n      \n    }*/\n\n    return obj;\n    }\n\n//RowSelectEvent\nfunction rowSelectEvent(curRowSelected, allRowsSelected){ \n\n  var _selectedData = [];\n\n  if(allRowsSelected.length === 0) {  //Wenn keine Rows ausgewählt sind\n    setSelectedData(undefined);\n    return;\n  }\n  \n  allRowsSelected.forEach(element => { //Get selected orders\n    _selectedData.push(allData[element.dataIndex])\n  });\n\n  setSelectedData(_selectedData);\n\n  return;\n}\n\n  return (\n  <div align=\"left\">\n    \n    <MUIDataTable \n        title={\"Transportaufträge\"}\n        data={allData}      \n        columns={columns}\n        options={options}/>\n    <br/>\n    <br/>\n    {/*<Button style={{backgroundColor: \"#e68a00\", color:\"white\"}}\n    variant=\"contained\" \n    onClick={SubmitOrders} \n    title=\"Mit Klick auf diesen Button werden alle ausgewählten Transportaufträge übermittelt.\">\n       Absenden\n    </Button>*/}\n   \n    </div>\n  );\n}","/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Chart.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ProgressTime.js",[],"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/AutomaticOrders.js",[],{"ruleId":"130","replacedBy":"131"},{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","severity":1,"message":"135","line":34,"column":10,"nodeType":"136","messageId":"137","endLine":34,"endColumn":16},{"ruleId":"134","severity":1,"message":"138","line":50,"column":9,"nodeType":"136","messageId":"137","endLine":50,"endColumn":25},{"ruleId":"139","severity":1,"message":"140","line":17,"column":6,"nodeType":"141","endLine":17,"endColumn":8,"suggestions":"142"},{"ruleId":"130","replacedBy":"143"},{"ruleId":"132","replacedBy":"144"},{"ruleId":"134","severity":1,"message":"145","line":3,"column":8,"nodeType":"136","messageId":"137","endLine":3,"endColumn":14},{"ruleId":"134","severity":1,"message":"146","line":64,"column":12,"nodeType":"136","messageId":"137","endLine":64,"endColumn":24},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'logDOM' is defined but never used.","Identifier","unusedVar","'fixedHeightPaper' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getTaskStates'. Either include it or remove the dependency array.","ArrayExpression",["149"],["147"],["148"],"'Button' is defined but never used.","'SubmitOrders' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"150","fix":"151"},"Update the dependencies array to be: [getTaskStates]",{"range":"152","text":"153"},[359,361],"[getTaskStates]"]