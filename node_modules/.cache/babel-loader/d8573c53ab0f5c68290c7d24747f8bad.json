{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Map/Map.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Dimensions, View } from \"react-native\";\nimport { NodeCameraView } from \"react-native-nodemediaclient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  width,\n  height\n} = Dimensions.get(\"window\");\nconst config = {\n  cameraConfig: {\n    cameraId: 1,\n    cameraFrontMirror: false\n  },\n  videoConfig: {\n    preset: 4,\n    bitrate: 2000000,\n    profile: 2,\n    fps: 30,\n    videoFrontMirror: true\n  },\n  audioConfig: {\n    bitrate: 128000,\n    profile: 1,\n    samplerate: 44100\n  }\n};\n\nconst BroadcastScreen = () => {\n  _s();\n\n  const cameraViewRef = React.useRef(null);\n  const url = `rtmp://127.0.0.1/live/test`;\n  return /*#__PURE__*/_jsxDEV(View, {\n    style: {\n      flex: 1\n    },\n    children: /*#__PURE__*/_jsxDEV(NodeCameraView, {\n      style: {\n        width,\n        height\n      },\n      ref: cameraViewRef,\n      outputUrl: url,\n      camera: config.cameraConfig,\n      audio: config.audioConfig,\n      video: config.videoConfig,\n      autopreview: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BroadcastScreen, \"Mlq6l/5HH53OIjZ3dP2pnbyHPpg=\");\n\n_c = BroadcastScreen;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"BroadcastScreen\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Map/Map.js"],"names":["React","Dimensions","View","NodeCameraView","width","height","get","config","cameraConfig","cameraId","cameraFrontMirror","videoConfig","preset","bitrate","profile","fps","videoFrontMirror","audioConfig","samplerate","BroadcastScreen","cameraViewRef","useRef","url","flex","Map"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,IAArB,QAAiC,cAAjC;AACA,SAASC,cAAT,QAA+B,8BAA/B;;AAEA,MAAM;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,IAAoBJ,UAAU,CAACK,GAAX,CAAe,QAAf,CAA1B;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE,CADE;AAEZC,IAAAA,iBAAiB,EAAE;AAFP,GADD;AAKbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE,CADG;AAEXC,IAAAA,OAAO,EAAE,OAFE;AAGXC,IAAAA,OAAO,EAAE,CAHE;AAIXC,IAAAA,GAAG,EAAE,EAJM;AAKXC,IAAAA,gBAAgB,EAAE;AALP,GALA;AAYbC,EAAAA,WAAW,EAAE;AACXJ,IAAAA,OAAO,EAAE,MADE;AAEXC,IAAAA,OAAO,EAAE,CAFE;AAGXI,IAAAA,UAAU,EAAE;AAHD;AAZA,CAAf;;AAmBA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B,QAAMC,aAAa,GAAGpB,KAAK,CAACqB,MAAN,CAAa,IAAb,CAAtB;AACA,QAAMC,GAAG,GAAI,4BAAb;AAEA,sBACE,QAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACC,MAAAA,IAAI,EAAE;AAAP,KAAb;AAAA,2BACE,QAAC,cAAD;AACE,MAAA,KAAK,EAAE;AAACnB,QAAAA,KAAD;AAAQC,QAAAA;AAAR,OADT;AAEE,MAAA,GAAG,EAAEe,aAFP;AAGE,MAAA,SAAS,EAAEE,GAHb;AAIE,MAAA,MAAM,EAAEf,MAAM,CAACC,YAJjB;AAKE,MAAA,KAAK,EAAED,MAAM,CAACU,WALhB;AAME,MAAA,KAAK,EAAEV,MAAM,CAACI,WANhB;AAOE,MAAA,WAAW,EAAE;AAPf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAjBD;;GAAMQ,e;;KAAAA,e;AAmBN,eAAeK,GAAf","sourcesContent":["import React from 'react';\nimport { Dimensions, View } from \"react-native\";\nimport { NodeCameraView } from \"react-native-nodemediaclient\";\n\nconst { width, height } = Dimensions.get(\"window\");\n\nconst config = {\n  cameraConfig: {\n    cameraId: 1,\n    cameraFrontMirror: false\n  },\n  videoConfig: {\n    preset: 4,\n    bitrate: 2000000,\n    profile: 2,\n    fps: 30,\n    videoFrontMirror: true,\n  },\n  audioConfig: {\n    bitrate: 128000,\n    profile: 1,\n    samplerate: 44100,\n  }\n};\n\nconst BroadcastScreen = () => {\n  const cameraViewRef = React.useRef(null);\n  const url = `rtmp://127.0.0.1/live/test`;\n\n  return (\n    <View style={{flex: 1}}>\n      <NodeCameraView\n        style={{width, height}}\n        ref={cameraViewRef}\n        outputUrl={url}\n        camera={config.cameraConfig}\n        audio={config.audioConfig}\n        video={config.videoConfig}\n        autopreview={true}\n      />\n    </View>\n  );\n};\n\nexport default Map;"]},"metadata":{},"sourceType":"module"}