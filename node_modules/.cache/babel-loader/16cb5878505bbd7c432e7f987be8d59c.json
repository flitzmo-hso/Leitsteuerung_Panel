{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Roboterstatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport axios from \"axios\";\nimport { ChartDonut, ChartThemeColor } from '@patternfly/react-charts';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ClearIcon from '@material-ui/icons/Clear'; //import Grid from \"@material-ui/core/\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    maxWidth: 345\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%' // 16:9\n\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest\n    })\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)'\n  },\n  avatar: {\n    backgroundColor: red[500]\n  }\n}));\nexport default function Roboterstatus() {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getRobotsStates();\n    }, 3000);\n    return () => clearInterval(10000); //alle 10 Sekunden\n  }, []);\n\n  function getRobotsStates() {\n    axios.get('http://0.0.0.0:8080/robot_list').then(res => {\n      console.log(\"Robotstates:\", res.data); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        //Karten auf null setzen\n        return;\n      }\n\n      setAllData(res.data); //Set new table data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  }\n\n  const useStyles = makeStyles(theme => ({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    }\n  }));\n  const data = {\n    name: [{\n      quarter: 1,\n      earnings: 13000\n    }, {\n      quarter: 2,\n      earnings: 16500\n    }, {\n      quarter: 3,\n      earnings: 14250\n    }, {\n      quarter: 4,\n      earnings: 19000\n    }],\n    id: [1, 2, 3, 4]\n  };\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: data.id.map(elem => /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 2,\n      direction: \"row\",\n      justify: \"flex-start\",\n      alignItems: \"flex-start\",\n      children: data.name.map(elem => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            title: `quarter : ${elem.quarter}`,\n            subheader: `earnings : ${elem.earnings}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              gutterBottom: true,\n              children: \"Hello World\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, data.name.indexOf(elem), false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Roboterstatus, \"rErEQflGad9LBN5D+HBqrKsqCZM=\", false, function () {\n  return [useStyles];\n});\n\n_c = Roboterstatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"Roboterstatus\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/Roboterstatus.js"],"names":["React","useState","useEffect","makeStyles","Card","CardHeader","axios","ChartDonut","ChartThemeColor","CardContent","Avatar","IconButton","Typography","red","ClearIcon","useStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","Roboterstatus","allData","setAllData","interval","setInterval","getRobotsStates","clearInterval","get","then","res","console","log","data","length","catch","err","message","flexGrow","padding","spacing","name","quarter","earnings","id","classes","map","elem","indexOf"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport axios from \"axios\";\nimport { ChartDonut, ChartThemeColor} from '@patternfly/react-charts';\nimport CardContent from '@material-ui/core/CardContent';\nimport Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport ClearIcon from '@material-ui/icons/Clear';\n//import Grid from \"@material-ui/core/\";\n\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: 345,\n  },\n  media: {\n    height: 0,\n    paddingTop: '56.25%', // 16:9\n  },\n  expand: {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n    transition: theme.transitions.create('transform', {\n      duration: theme.transitions.duration.shortest,\n    }),\n  },\n  expandOpen: {\n    transform: 'rotate(180deg)',\n  },\n  avatar: {\n    backgroundColor: red[500],\n  },\n}));\n\nexport default function Roboterstatus() {\n\nconst [allData, setAllData] = useState([]); \n\n\n\nuseEffect(() => {\n  const interval = setInterval(() => {\n    getRobotsStates(); \n  }, 3000);\n\n  return () => clearInterval(10000); //alle 10 Sekunden\n}, [])\n\nfunction getRobotsStates(){\n\n    axios.get('http://0.0.0.0:8080/robot_list')\n    .then(res => {\n    console.log(\"Robotstates:\", res.data); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n      //Karten auf null setzen\n      return;\n    }\n   \n    setAllData(res.data); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n}\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n      flexGrow: 1,\n      padding: theme.spacing(2)\n    }\n  }));\n\n    const data = {\n      name: [\n        { quarter: 1, earnings: 13000 },\n        { quarter: 2, earnings: 16500 },\n        { quarter: 3, earnings: 14250 },\n        { quarter: 4, earnings: 19000 }\n      ],\n      id: [1, 2, 3, 4]\n    };\n\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n    {data.id.map((elem) => (\n      <Grid\n        container\n        spacing={2}\n        direction=\"row\"\n        justify=\"flex-start\"\n        alignItems=\"flex-start\"\n      >\n        {data.name.map((elem) => (\n          <Grid item xs={3} key={data.name.indexOf(elem)}>\n            <Card>\n              <CardHeader\n                title={`quarter : ${elem.quarter}`}\n                subheader={`earnings : ${elem.earnings}`}\n              />\n              <CardContent>\n                <Typography variant=\"h5\" gutterBottom>\n                  Hello World\n                </Typography>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    ))}\n  </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}