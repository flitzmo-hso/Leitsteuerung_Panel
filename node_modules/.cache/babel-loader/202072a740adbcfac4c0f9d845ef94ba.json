{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ProgressTime.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function KpiAuslastung() {\n  _s();\n\n  const [time, setTime] = useState(\"\");\n  const [anzFinish, setAnzFinish] = useState(\"\");\n  const [avgTime, setAvgTime] = useState(\"\");\n  useEffect(() => {\n    getProgessTime();\n  }); //Get KPI\n\n  function getProgessTime() {\n    axios.get('http://localhost:8080/getProgressTime').then(res => {\n      console.log(\"Progresstime:\", res);\n\n      if (res.data.length === 0) {\n        //Check if data is availabl\n        setTime(0);\n        setAnzFinish(0);\n        setAvgTime(0);\n        return;\n      } //if (DataAreEqual(res.data)) return;  //Check if old data = new data\n\n\n      setTime(String(res.data[0]));\n      setAnzFinish(String(res.data[1]));\n      setAvgTime(String(res.data[2]));\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      paddig: \"30\",\n      height: '100px',\n      padding: 0,\n      margin: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Gesamte Abwicklungszeit: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 5\n    }, this), time, \" Min.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 49\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Fertige Auftr\\xE4ge:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 5\n    }, this), \" \", anzFinish, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 42\n    }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n      children: \"Durchn. Zeit je Auftrag: \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 6\n    }, this), avgTime, \" Min.\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(KpiAuslastung, \"AUjUKBVJ3CRpzgeDaVS/7gtLd/Y=\");\n\n_c = KpiAuslastung;\n\nvar _c;\n\n$RefreshReg$(_c, \"KpiAuslastung\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/ProgressTime.js"],"names":["React","useState","useEffect","axios","KpiAuslastung","time","setTime","anzFinish","setAnzFinish","avgTime","setAvgTime","getProgessTime","get","then","res","console","log","data","length","String","catch","err","message","paddig","height","padding","margin"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA0C,OAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AAExC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAES,IAAAA,cAAc;AAAK,GAA5B,CAAT,CANwC,CAQxC;;AACA,WAASA,cAAT,GACA;AACER,IAAAA,KAAK,CAACS,GAAN,CAAU,uCAAV,EACKC,IADL,CACUC,GAAG,IAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,GAA7B;;AACF,UAAGA,GAAG,CAACG,IAAJ,CAASC,MAAT,KAAoB,CAAvB,EAA0B;AAAE;AAC1BZ,QAAAA,OAAO,CAAC,CAAD,CAAP;AACAE,QAAAA,YAAY,CAAC,CAAD,CAAZ;AACAE,QAAAA,UAAU,CAAC,CAAD,CAAV;AACA;AACD,OAPY,CAUb;;;AACAJ,MAAAA,OAAO,CAACa,MAAM,CAACL,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAD,CAAP,CAAP;AACAT,MAAAA,YAAY,CAACW,MAAM,CAACL,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAD,CAAP,CAAZ;AACAP,MAAAA,UAAU,CAACS,MAAM,CAACL,GAAG,CAACG,IAAJ,CAAS,CAAT,CAAD,CAAP,CAAV;AAEC,KAhBL,EAkBKG,KAlBL,CAkBWC,GAAG,IAAI;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,GAAG,CAACC,OAAhB,EADU,CACgB;AAC7B,KApBL;AAqBC;;AAGD,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,IAAV;AAAgBC,MAAAA,MAAM,EAAE,OAAxB;AAAiCC,MAAAA,OAAO,EAAE,CAA1C;AAA6CC,MAAAA,MAAM,EAAE;AAArD,KAAZ;AAAA,4BACJ;AAAA;AAAA;AAAA;AAAA,YADI,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFA,EAEkCrB,IAFlC,wBAE4C;AAAA;AAAA;AAAA;AAAA,YAF5C,eAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHA,OAG0BE,SAH1B,oBAGqC;AAAA;AAAA;AAAA;AAAA,YAHrC,eAIC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD,EAIkCE,OAJlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA5CuBL,a;;KAAAA,a","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport axios from \"axios\";\n\nexport default function KpiAuslastung() {\n\nconst [time, setTime] = useState(\"\");     \nconst [anzFinish, setAnzFinish] = useState(\"\");   \nconst [avgTime, setAvgTime] = useState(\"\");  \n\nuseEffect(() => { getProgessTime(); });\n\n//Get KPI\nfunction getProgessTime()\n{ \n  axios.get('http://localhost:8080/getProgressTime')\n      .then(res => {\n        console.log(\"Progresstime:\", res)\n      if(res.data.length === 0) { //Check if data is availabl\n        setTime(0)\n        setAnzFinish(0)\n        setAvgTime(0)\n        return;\n      }       \n    \n      \n      //if (DataAreEqual(res.data)) return;  //Check if old data = new data\n      setTime(String(res.data[0]))\n      setAnzFinish(String(res.data[1]))\n      setAvgTime(String(res.data[2]))\n\n      })\n\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n      })\n  } \n\n\n  return (\n    <div style={{ paddig: \"30\", height: '100px', padding: 0, margin: 0}}>  \n<p></p>\n    <b>Gesamte Abwicklungszeit: </b>{ time} Min.<br/>\n    <b>Fertige Auftr√§ge:</b> {anzFinish} <br/>\n     <b>Durchn. Zeit je Auftrag: </b>{avgTime} Min.\n\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}