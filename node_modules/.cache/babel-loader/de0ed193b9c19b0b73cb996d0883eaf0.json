{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/OpenOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ERPOrders() {\n  _s();\n\n  const columns = [{\n    name: \"O_ID\",\n    label: \"Order-Nr\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"OT_DESC\",\n    label: \"Order-Typ\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_TIMESTAMP\",\n    label: \"Zeit\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_PRIO\",\n    label: \"Priorität\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_IDFROM\",\n    label: \"O_WH_IDFROM\",\n    options: {\n      filter: false,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"O_WH_IDTO\",\n    label: \"O_WH_IDTO\",\n    options: {\n      filter: false,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"O_WH_COORDINATEFROM\",\n    label: \"Koordinate Von\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_COORDINATETO\",\n    label: \"Koordinate Nach\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_FT_IDREQUIREMENT\",\n    label: \"Benötiges Anbaugerät\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_OS_ID\",\n    label: \"O_OS_ID\",\n    options: {\n      filter: false,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"OS_DESC\",\n    label: \"Status\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }];\n  const options = {\n    rowsPerPage: 5,\n    customToolbarSelect: () => {},\n    filterType: 'checkbox',\n    download: false,\n    onRowSelectionChange: (curRowSelected, allRowsSelected) => {\n      rowSelectEvent(curRowSelected, allRowsSelected);\n    }\n  };\n  const [allData, setAllData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]); //Event if data changed\n\n  useEffect(() => {\n    DatenLaden();\n  }); //Load data\n\n  function DatenLaden() {\n    axios.get('http://0.0.0.0:8080/getDBOrders?status=1').then(res => {\n      console.log(\"RESPONSE:\", res); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        setAllData(undefined);\n        return;\n      }\n\n      if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n\n      console.log(\"Data:\", res.data);\n      setAllData(res.data); //Set new table data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  } //Check if old data = new data\n\n\n  function DataAreEqual(data, sortedOrders) {\n    if (data.sort().join(',') === sortedOrders.sort().join(',')) {\n      return true;\n    } else return false;\n  } //Submit selected Table Orders\n\n\n  function SubmitOrders() {\n    console.log(\"Ausgewählte Datensätze:\", selectedData);\n\n    if (selectedData === undefined || selectedData.length === 0) {\n      alert(\"Bitte Datensatz auswählen!\");\n      return;\n    }\n\n    selectedData.forEach(element => {\n      //TODO: Filterselectdata auf neues Objekt umbauen.\n      var singleSubmits = filterSelectedData(element);\n      axios.post('http://0.0.0.0:8080/submit_task', singleSubmits).then(res => {\n        console.log(\"Returned Task ID:\", res.data['task_id']); //Put orders to DB\n\n        PutOrderToDb(singleSubmits, res.data['task_id']);\n        alert(\"Erfolgreich übermittelt.\");\n      }).catch(err => {\n        console.log(err.message); //Error-Handling\n\n        alert(\"Fehler.\");\n      });\n    });\n  }\n\n  function PutOrderToDb(objVal, taskId) {\n    axios.post('http://0.0.0.0:8080/postOrderAutomatic', objVal).then(res => {\n      console.log(\"DB RESPONSE:\", res.data[0]);\n      insertMapping(taskId, res.data[0][1], res.data[0][2]);\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n\n      alert(\"Fehler.\");\n    });\n    return;\n  }\n\n  function insertMapping(taskid, orderId, sessionId) {\n    console.log(\"TaskId:\", taskid, \"OrderId\", orderId, \"SessionId:\", sessionId);\n    var obj = {\n      \"OM_SESSIONID\": parseInt(sessionId),\n      \"OM_DELIVERYID\": taskid,\n      \"OM_O_ID\": parseInt(orderId),\n      \"OM_OT_ID\": 1\n    };\n    axios.post('http://0.0.0.0:8080/insertMapping', obj).then(res => {\n      alert(\"Erfolgreich übermittelt.\");\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n\n      alert(\"Fehler.\");\n    });\n  }\n\n  function filterSelectedData(element) {\n    var obj = {}; //Delivery Order\n\n    if (element[\"task_type\"] === \"Delivery\") {\n      if (element[\"start_time\"] === '' || element[\"priority\"] === '' || element[\"option\"] === '') return undefined;\n      obj['task_type'] = \"Delivery\";\n      obj['start_time'] = parseInt(element[\"start_time\"]);\n      obj['priority'] = parseInt(element[\"priority\"]);\n      obj[\"description\"] = {\n        \"option\": element[\"option\"]\n      };\n    } //Loop Order\n\n    /*if (element[\"task_type\"] === \"Loop\") {\n       if(element[\"start_time\"] === '' || element[\"priority\"]  === '' || element[\"num_loops\"]  === ''  || \n      element[\"num_loops\"]  === 0 ||  element[\"start_name\"]  === '' ||  element[\"finish_name\"]  ===  '')  return undefined; \n       obj['task_type'] = \"Loop\"; obj['start_time'] = parseInt(element[\"start_time\"]); \n      obj['priority'] = parseInt(element[\"priority\"]); \n      obj['description'] = {\"num_loops\": parseInt(element[\"num_loops\"]) , \"start_name\": element[\"start_name\"], \"finish_name\": element[\"finish_name\"]};\n    \n    }*/\n\n\n    return obj;\n  } //RowSelectEvent\n\n\n  function rowSelectEvent(curRowSelected, allRowsSelected) {\n    var _selectedData = [];\n\n    if (allRowsSelected.length === 0) {\n      //Wenn keine Rows ausgewählt sind\n      setSelectedData(undefined);\n      return;\n    }\n\n    allRowsSelected.forEach(element => {\n      //Get selected orders\n      _selectedData.push(allData[element.dataIndex]);\n    });\n    setSelectedData(_selectedData);\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: \"Transportaufträge\",\n      data: allData,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      style: {\n        backgroundColor: \"gray\"\n      },\n      variant: \"contained\",\n      onClick: SubmitOrders,\n      title: \"Mit Klick auf diesen Button werden alle ausgew\\xE4hlten Transportauftr\\xE4ge \\xFCbermittelt.\",\n      children: \"Absenden\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ERPOrders, \"llTBpHV7Y5cZtkKg3BL5C+Lz1U8=\");\n\n_c = ERPOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ERPOrders\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/OpenOrders.js"],"names":["React","useState","useEffect","MUIDataTable","Button","axios","ERPOrders","columns","name","label","options","filter","sort","display","rowsPerPage","customToolbarSelect","filterType","download","onRowSelectionChange","curRowSelected","allRowsSelected","rowSelectEvent","allData","setAllData","selectedData","setSelectedData","DatenLaden","get","then","res","console","log","data","length","undefined","DataAreEqual","catch","err","message","sortedOrders","join","SubmitOrders","alert","forEach","element","singleSubmits","filterSelectedData","post","PutOrderToDb","objVal","taskId","insertMapping","taskid","orderId","sessionId","obj","parseInt","_selectedData","push","dataIndex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nexport default function ERPOrders() {\n\n  const columns = [ \n   {name: \"O_ID\", label: \"Order-Nr\", options: {filter: true, sort: true, display: true}}, \n   {name: \"OT_DESC\", label: \"Order-Typ\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_TIMESTAMP\", label: \"Zeit\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_PRIO\", label: \"Priorität\",  options: {filter: true,  sort: true, display: true}}, \n   {name: \"O_WH_IDFROM\", label: \"O_WH_IDFROM\", options: {filter: false, sort: false, display: false}},\n   {name: \"O_WH_IDTO\", label: \"O_WH_IDTO\", options: {filter: false, sort: true, display: false}},  \n   {name: \"O_WH_COORDINATEFROM\", label: \"Koordinate Von\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_WH_COORDINATETO\", label: \"Koordinate Nach\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_FT_IDREQUIREMENT\", label: \"Benötiges Anbaugerät\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_OS_ID\", label: \"O_OS_ID\",options: {filter: false, sort: false,display: false}},\n   {name: \"OS_DESC\", label: \"Status\",options: {filter: true,sort: true,display: true}} \n   ];\n\n  const options = {rowsPerPage: 5, customToolbarSelect: () => { }, filterType: 'checkbox', download: false, \n   onRowSelectionChange : (curRowSelected, allRowsSelected) => {rowSelectEvent(curRowSelected, allRowsSelected); }};\n  \n  const [allData, setAllData] = useState([]); \n  const [selectedData, setSelectedData] =  useState([]); \n\n  //Event if data changed\n  useEffect(() => { DatenLaden(); });\n  \n  //Load data\n  function DatenLaden(){\n    axios.get('http://0.0.0.0:8080/getDBOrders?status=1')\n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n      setAllData(undefined);\n      return;\n    }\n\n    if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n    console.log(\"Data:\", res.data);    \n    setAllData(res.data); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n  }\n\n  //Check if old data = new data\n  function DataAreEqual(data, sortedOrders){\n    if(data.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n    }\n\n  //Submit selected Table Orders\n  function SubmitOrders() {\n\n    console.log(\"Ausgewählte Datensätze:\", selectedData);\n\n    if(selectedData === undefined || selectedData.length === 0) {\n      alert(\"Bitte Datensatz auswählen!\"); return; \n    }\n\n    selectedData.forEach(element => {\n\n      //TODO: Filterselectdata auf neues Objekt umbauen.\n      var singleSubmits = filterSelectedData(element);\n\n      axios.post('http://0.0.0.0:8080/submit_task', singleSubmits)\n      .then(res => {\n      console.log(\"Returned Task ID:\", res.data['task_id']);\n\n      //Put orders to DB\n      PutOrderToDb(singleSubmits, res.data['task_id']);  \n\n      alert(\"Erfolgreich übermittelt.\"); \n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n          alert(\"Fehler.\");  \n    \n      }) \n      \n    });\n      \n    }\n\n    function PutOrderToDb(objVal, taskId){\n\n      axios.post('http://0.0.0.0:8080/postOrderAutomatic', objVal)\n      .then(res => {\n      console.log(\"DB RESPONSE:\", res.data[0]);\n  \n        insertMapping(taskId, res.data[0][1], res.data[0][2]);\n     \n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n          alert(\"Fehler.\");  \n    \n      }) \n  \n  return;\n    }\n\n    function insertMapping(taskid, orderId, sessionId) {\n\n      console.log(\"TaskId:\", taskid, \"OrderId\", orderId, \"SessionId:\", sessionId)\n      \n      var obj = { \"OM_SESSIONID\": parseInt(sessionId), \"OM_DELIVERYID\": taskid, \"OM_O_ID\": parseInt(orderId), \"OM_OT_ID\":  1};\n  \n      axios.post('http://0.0.0.0:8080/insertMapping', obj)\n      .then(res => {\n  \n      alert(\"Erfolgreich übermittelt.\"); \n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n          alert(\"Fehler.\");  \n    \n      }) \n  \n    }\n\n   \n\n\n    function filterSelectedData(element){\n\n      var obj = {};\n \n      //Delivery Order\n      if (element[\"task_type\"] === \"Delivery\") {\n\n        if (element[\"start_time\"] === '' || element[\"priority\"]  === '' || element[\"option\"] === '') return undefined;\n\n        obj['task_type'] = \"Delivery\"; obj['start_time'] = parseInt(element[\"start_time\"]); \n        obj['priority'] = parseInt(element[\"priority\"]); obj[\"description\"] = {\"option\": element[\"option\"]};\n      \n      }\n\n      //Loop Order\n      /*if (element[\"task_type\"] === \"Loop\") {\n\n        if(element[\"start_time\"] === '' || element[\"priority\"]  === '' || element[\"num_loops\"]  === ''  || \n        element[\"num_loops\"]  === 0 ||  element[\"start_name\"]  === '' ||  element[\"finish_name\"]  ===  '')  return undefined; \n\n        obj['task_type'] = \"Loop\"; obj['start_time'] = parseInt(element[\"start_time\"]); \n        obj['priority'] = parseInt(element[\"priority\"]); \n        obj['description'] = {\"num_loops\": parseInt(element[\"num_loops\"]) , \"start_name\": element[\"start_name\"], \"finish_name\": element[\"finish_name\"]};\n      \n    }*/\n\n    return obj;\n    }\n\n//RowSelectEvent\nfunction rowSelectEvent(curRowSelected, allRowsSelected){ \n\n  var _selectedData = [];\n\n  if(allRowsSelected.length === 0) {  //Wenn keine Rows ausgewählt sind\n    setSelectedData(undefined);\n    return;\n  }\n  \n  allRowsSelected.forEach(element => { //Get selected orders\n    _selectedData.push(allData[element.dataIndex])\n  });\n\n  setSelectedData(_selectedData);\n\n  return;\n}\n\n  return (\n  <div align=\"left\">\n    \n    <MUIDataTable \n        title={\"Transportaufträge\"}\n        data={allData}      \n        columns={columns}\n        options={options}/>\n    <br/>\n    <br/>\n    <Button style={{backgroundColor: \"gray\"}}\n    variant=\"contained\" \n    onClick={SubmitOrders} \n    title=\"Mit Klick auf diesen Button werden alle ausgewählten Transportaufträge übermittelt.\">\n       Absenden\n    </Button>\n   \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}