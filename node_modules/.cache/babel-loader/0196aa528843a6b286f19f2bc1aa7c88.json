{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/WaitingOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MUIDataTable from \"mui-datatables\"; //import Button from '@material-ui/core/Button';\n\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WaitingOrders() {\n  _s();\n\n  const columns = [{\n    name: \"O_ID\",\n    label: \"Order-Nr\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"OT_DESC\",\n    label: \"Order-Typ\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_TIMESTAMP\",\n    label: \"Zeit\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_PRIO\",\n    label: \"Priorität\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_IDFROM\",\n    label: \"von Lagerplatz\",\n    options: {\n      filter: false,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"O_WH_COORDINATEFROM\",\n    label: \"Koordinate Von\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_COORDINATETO\",\n    label: \"Koordinate Nach\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_IDTO\",\n    label: \"nach Lagerplatz\",\n    options: {\n      filter: false,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"O_DP_DELIVERYPOINTFROM\",\n    label: \"Aufladepunkt\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_DP_DELIVERYPOINTTO\",\n    label: \"Abladepunkt\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_FT_IDREQUIREMENT\",\n    label: \"Benötiges Anbaugerät\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_OS_ID\",\n    label: \"Status ID\",\n    options: {\n      filter: false,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"OS_DESC\",\n    label: \"Status\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }];\n  const options = {\n    selectableRows: false,\n    rowsPerPage: 5,\n    customToolbarSelect: () => {},\n    filterType: 'checkbox',\n    download: false,\n    onRowSelectionChange: (curRowSelected, allRowsSelected) => {\n      rowSelectEvent(curRowSelected, allRowsSelected);\n    }\n  };\n  const [allData, setAllData] = useState([]);\n  const [,\n  /*selectedData*/\n  setSelectedData] = useState([]); //Event if data changed\n\n  useEffect(() => {\n    DatenLaden();\n  }); //Load data\n\n  function DatenLaden() {\n    axios.get('http://0.0.0.0:8080/getDBOrders?status=5').then(res => {\n      console.log(\"RESPONSE:\", res); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        setAllData(undefined);\n        return;\n      }\n\n      if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n\n      console.log(\"Data:\", res.data);\n      setAllData(res.data); //Set new table data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  } //Check if old data = new data\n\n\n  function DataAreEqual(data, sortedOrders) {\n    if (data.sort().join(',') === sortedOrders.sort().join(',')) {\n      return true;\n    } else return false;\n  } //Success and error messages\n\n  /*function cssMessage(message, color)\n  { //Set\n    document.getElementsByClassName(\"footer\")[0].style.textAlign = \"center\";\n    document.getElementsByClassName(\"footer\")[0].innerHTML = message;\n    document.getElementsByClassName(\"footer\")[0].style.backgroundColor = color;\n  \n    //Reset\n    sleep(4000).then(() => { \n    document.getElementsByClassName(\"footer\")[0].style.textAlign = \"right\";\n    document.getElementsByClassName(\"footer\")[0].innerHTML = \"Powered by ©Flitzmo\";\n    document.getElementsByClassName(\"footer\")[0].style.backgroundColor = \"#90caf9\";\n    });\n  } */\n  //Sleep for asynchronous calls\n\n  /*function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }*/\n  //Submit selected Table Orders\n\n  /* function CancelOrders() {\n      console.log(\"Ausgewählte Datensätze:\", selectedData);\n      if(selectedData === undefined || selectedData.length === 0) {\n       alert(\"Bitte Datensatz auswählen!\"); return; \n     }\n      for (let element of selectedData) {\n       \n       var taskID = 0;\n       //var taskID = element[\"task_id\"]; TASK_ID HIER NOCH NICHT BEKANNT\n        if( taskID === undefined || taskID.length === 0 ) continue; \n        axios.post('http://0.0.0.0:8080/cancel_task', {\"task_id\": String(taskID)})\n       .then(res => {\n       console.log(\"DB RESPONSE:\", res.data);\n     \n       })\n       .catch(err => {\n           console.log(err.message); //Error-Handling\n           cssMessage(\"Fehler beim Abbrechen.\", \"#9c2c2c\"); \n     \n       }) \n     \n       }\n     } */\n  //RowSelectEvent\n\n\n  function rowSelectEvent(curRowSelected, allRowsSelected) {\n    var _selectedData = [];\n\n    if (allRowsSelected.length === 0) {\n      //Wenn keine Rows ausgewählt sind\n      setSelectedData(undefined);\n      return;\n    }\n\n    allRowsSelected.forEach(element => {\n      //Get selected orders\n      _selectedData.push(allData[element.dataIndex]);\n    });\n    setSelectedData(_selectedData);\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: \"Transportaufträge\",\n      data: allData,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 3\n  }, this);\n}\n\n_s(WaitingOrders, \"454WZp0e9d2NxXN8XkF6sCBiigk=\");\n\n_c = WaitingOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"WaitingOrders\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/WaitingOrders.js"],"names":["React","useState","useEffect","MUIDataTable","axios","WaitingOrders","columns","name","label","options","filter","sort","display","selectableRows","rowsPerPage","customToolbarSelect","filterType","download","onRowSelectionChange","curRowSelected","allRowsSelected","rowSelectEvent","allData","setAllData","setSelectedData","DatenLaden","get","then","res","console","log","data","length","undefined","DataAreEqual","catch","err","message","sortedOrders","join","_selectedData","forEach","element","push","dataIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport MUIDataTable from \"mui-datatables\";\n//import Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nexport default function WaitingOrders() {\n\n  const columns = [ \n   {name: \"O_ID\", label: \"Order-Nr\", options: {filter: true, sort: true, display: true}}, \n   {name: \"OT_DESC\", label: \"Order-Typ\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_TIMESTAMP\", label: \"Zeit\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_PRIO\", label: \"Priorität\",  options: {filter: true,  sort: true, display: true}}, \n   {name: \"O_WH_IDFROM\", label: \"von Lagerplatz\", options: {filter: false, sort: false, display: false}},\n   {name: \"O_WH_COORDINATEFROM\", label: \"Koordinate Von\", options: {filter: true, sort: true, display: true}}, \n  \n   {name: \"O_WH_COORDINATETO\", label: \"Koordinate Nach\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_WH_IDTO\", label: \"nach Lagerplatz\", options: {filter: false, sort: true, display: false}},  \n   {name: \"O_DP_DELIVERYPOINTFROM\", label: \"Aufladepunkt\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_DP_DELIVERYPOINTTO\", label: \"Abladepunkt\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_FT_IDREQUIREMENT\", label: \"Benötiges Anbaugerät\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_OS_ID\", label: \"Status ID\",options: {filter: false, sort: false,display: false}},\n   {name: \"OS_DESC\", label: \"Status\",options: {filter: true,sort: true,display: true}} \n   ];\n\n  const options = {selectableRows: false, rowsPerPage: 5, customToolbarSelect: () => { }, filterType: 'checkbox', download: false, \n   onRowSelectionChange : (curRowSelected, allRowsSelected) => {rowSelectEvent(curRowSelected, allRowsSelected); }};\n  \n  const [allData, setAllData] = useState([]); \n  const [/*selectedData*/, setSelectedData] =  useState([]); \n\n  //Event if data changed\n  useEffect(() => { DatenLaden(); });\n  \n  //Load data\n  function DatenLaden(){\n    axios.get('http://0.0.0.0:8080/getDBOrders?status=5')\n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n      setAllData(undefined);\n      return;\n    }\n\n    if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n    console.log(\"Data:\", res.data);    \n    setAllData(res.data); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n  }\n\n  //Check if old data = new data\n  function DataAreEqual(data, sortedOrders){\n    if(data.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n    }\n\n    //Success and error messages\n/*function cssMessage(message, color)\n{ //Set\n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"center\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = message;\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = color;\n\n  //Reset\n  sleep(4000).then(() => { \n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"right\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = \"Powered by ©Flitzmo\";\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = \"#90caf9\";\n  });\n} */\n\n//Sleep for asynchronous calls\n/*function sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}*/\n\n\n  //Submit selected Table Orders\n /* function CancelOrders() {\n\n    console.log(\"Ausgewählte Datensätze:\", selectedData);\n\n    if(selectedData === undefined || selectedData.length === 0) {\n      alert(\"Bitte Datensatz auswählen!\"); return; \n    }\n\n    for (let element of selectedData) {\n      \n      var taskID = 0;\n      //var taskID = element[\"task_id\"]; TASK_ID HIER NOCH NICHT BEKANNT\n\n      if( taskID === undefined || taskID.length === 0 ) continue; \n\n      axios.post('http://0.0.0.0:8080/cancel_task', {\"task_id\": String(taskID)})\n      .then(res => {\n      console.log(\"DB RESPONSE:\", res.data);\n    \n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n          cssMessage(\"Fehler beim Abbrechen.\", \"#9c2c2c\"); \n    \n      }) \n    \n      }\n    } */\n\n//RowSelectEvent\nfunction rowSelectEvent(curRowSelected, allRowsSelected){ \n\n  var _selectedData = [];\n\n  if(allRowsSelected.length === 0) {  //Wenn keine Rows ausgewählt sind\n    setSelectedData(undefined);\n    return;\n  }\n  \n  allRowsSelected.forEach(element => { //Get selected orders\n    _selectedData.push(allData[element.dataIndex])\n  });\n\n  setSelectedData(_selectedData);\n\n  return;\n}\n\n  return (\n  <div align=\"left\">\n    \n    <MUIDataTable \n        title={\"Transportaufträge\"}\n        data={allData}      \n        columns={columns}\n        options={options}/>\n    <br/>\n    <br/>\n    {/*<Button style={{backgroundColor: \"gray\"}}\n    variant=\"contained\" \n    //onClick={CancelOrders} \n    title=\"Mit Klick auf diesen Button werden alle ausgewählten Transportaufträge abgebrochen.\">\n       Abbrechen\n  </Button> */}\n   \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}