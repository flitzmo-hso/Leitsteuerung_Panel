{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ERPOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ERPOrders() {\n  _s();\n\n  const columns = [{\n    name: \"O_DATE\",\n    label: \"Bestelldatum\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"p_nr\",\n    label: \"Produktionsnr\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_NR\",\n    label: \"Bestell-Nr\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"OI_NR\",\n    label: \"Bestellpos-Nr\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"PO_CODE\",\n    label: \"PO_CODE\",\n    options: {\n      filter: true,\n      filterList: filterDataPoCode,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"PO_COUNTER\",\n    label: \"PO_COUNTER\",\n    options: {\n      filter: false,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"QUANTITY\",\n    label: \"Menge\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"MAT_NR\",\n    label: \"Material-Nr\",\n    options: {\n      filter: false,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"C\",\n    label: \"C\",\n    options: {\n      filter: true,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"M\",\n    label: \"M\",\n    options: {\n      filter: true,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"Y\",\n    label: \"Y\",\n    options: {\n      filter: true,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"K\",\n    label: \"K\",\n    options: {\n      filter: true,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"PROD_PRIO\",\n    label: \"Priorität\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"HEXCOLOR\",\n    label: \"Hex-Wert\",\n    options: {\n      filter: true,\n      filterList: filterData,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"DELTA_E\",\n    label: \"Helligkeit\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"CUSTOMER_TYPE\",\n    label: \"Kundentyp\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"IMAGE\",\n    label: \"Image\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"PROD_STATUS\",\n    label: \"Status\",\n    options: {\n      filter: false,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"END_DATE\",\n    label: \"END_DATE\",\n    options: {\n      filter: false,\n      sort: false,\n      display: false\n    }\n  }];\n  const options = {\n    rowsPerPage: 5,\n    customToolbarSelect: () => {},\n    filterType: 'checkbox',\n    download: false,\n    onRowSelectionChange: (curRowSelected, allRowsSelected) => {\n      rowSelectEvent(curRowSelected, allRowsSelected);\n    }\n  };\n  const [auswahlBackgroundColor, SetAuswahlBackgroundColor] = useState(\"#d8dce4\");\n  const [csvdata, setCsvData] = useState([]);\n  const [Quantity, setQuantity] = useState(\"\");\n  const [QuantityColor, setQuantityColor] = useState(\"#ffffff\");\n  const csvheaders = [\"OI_NR\", \"O_DATE\", \"p_nr\", \"QUANTITY\", \"HEXCOLOR\", \"DELTA_E\", \"C\", \"M\", \"Y\", \"K\", \"IMAGE\"];\n  const [allData, setAllData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]); //Event if data changed\n\n  useEffect(() => {\n    DatenLaden();\n  }); //Load data\n\n  function DatenLaden() {\n    axios.get('https://1ygz8xt0rc.execute-api.eu-central-1.amazonaws.com/main/getplanningorders').then(res => {\n      console.log(\"RESPONSE:\", res); //Data from Gateway\n\n      if (IsDataBaseOffline(res)) return; //Check if database is available\n\n      if (res.data.body.length === 0) {\n        //Check if data is available\n        setAllData(undefined);\n        setCsvData([]);\n        return;\n      }\n\n      if (DataAreEqual(allData, res.data.body)) return; //Check if data has changed       \n\n      setAllData(res.data.body); //Set new table data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  } //TabAuswahl Change Event\n\n\n  function AuswahlChange(newValue) {\n    if (newValue === \"Alle\") {\n      SetAuswahlBackgroundColor([\"#d8dce4\"]);\n      setFilterData([]);\n      setFilterDataPoCode([]);\n      return;\n    } //SetAuswahlBackgroundColor(newValue); //Background color change  \n\n\n    setFilterData([newValue]);\n    setFilterDataPoCode([\"N\", \"Q\", \"R\"]);\n  } //Check if database is offline (AWS)\n\n\n  function IsDataBaseOffline(res) {\n    if (res.data.errorMessage == null) return false;\n    if (res.data.errorMessage === 'undefined') return false;\n\n    if (res.data.errorMessage.endsWith(\"timed out after 3.00 seconds\")) {\n      alert(\"Database is offline (AWS).\");\n      return true;\n    }\n\n    return false;\n  } //Check if old data = new data\n\n\n  function DataAreEqual(data, sortedOrders) {\n    if (data.sort().join(',') === sortedOrders.sort().join(',')) {\n      return true;\n    } else return false;\n  } //Update status in planning to in production\n\n\n  function updateProdStatus() {\n    if (selectedData == null || selectedData === undefined || selectedData.length === 0) {\n      alert(\"Bitte Positionen auswählen!\");\n      return;\n    }\n\n    var pKs = filterPks(selectedData);\n    var pKs_json = JSON.parse(JSON.stringify(pKs));\n    console.log(pKs_json); //Update V&V Status\n\n    axios.put(\"https://hfmbwiwpid.execute-api.eu-central-1.amazonaws.com/sales/orders/orderitems?status=3\", pKs_json).then(res => {\n      console.log(res);\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    }); //Update Production table from Prod_status 0 to 1 (In Planung zu In Färbung)\n\n    axios.put(\"https://1ygz8xt0rc.execute-api.eu-central-1.amazonaws.com/main/updateplanningtoprod\", pKs_json).then(res => {\n      console.log(res);\n      cssMessage(\"Erfolgreich in die Färbung gegeben.\", \"#4dff88\");\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n\n      cssMessage(\"Error.\", \"#9c2c2c\");\n    });\n    sleep(900).then(() => {\n      setSelectedData(undefined);\n      DatenLaden();\n    });\n    return;\n  } //Update to 'in Druck'\n\n\n  function inDruckStatus() {\n    if (selectedData == null || selectedData === undefined || selectedData.length === 0) {\n      alert(\"Bitte Positionen auswählen!\");\n      return;\n    }\n\n    var pKs = filterPks(selectedData);\n    var pKs_json = JSON.parse(JSON.stringify(pKs));\n    console.log(pKs_json); //Update Production table from 'In Planung' to 'In Druck'\n\n    axios.put(\"https://1ygz8xt0rc.execute-api.eu-central-1.amazonaws.com/main/updatefaerbeorders\", pKs_json).then(res => {\n      console.log(res);\n      cssMessage(\"Erfolgreich in den Druck gegeben.\", \"#4dff88\");\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n\n      cssMessage(\"Error.\", \"#9c2c2c\");\n    });\n    sleep(900).then(() => {\n      //Reload data\n      setSelectedData(undefined);\n      DatenLaden();\n    });\n    return;\n  } //Success and error messages\n\n\n  function cssMessage(message, color) {\n    //Set\n    document.getElementsByClassName(\"footer\")[0].style.textAlign = \"center\";\n    document.getElementsByClassName(\"footer\")[0].innerHTML = message;\n    document.getElementsByClassName(\"footer\")[0].style.backgroundColor = color; //Reset\n\n    sleep(2200).then(() => {\n      document.getElementsByClassName(\"footer\")[0].style.textAlign = \"right\";\n      document.getElementsByClassName(\"footer\")[0].innerHTML = \"Powered by ©BlackForestConsulting\";\n      document.getElementsByClassName(\"footer\")[0].style.backgroundColor = \"#90caf9\";\n    });\n  } //Sleep for asynchronous calls\n\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  } //Get only primary keys from selected orders\n\n\n  function filterPks(selectedData) {\n    var _pks = [];\n    selectedData.forEach(element => {\n      var singleVal = {};\n      singleVal[\"O_NR\"] = element[\"O_NR\"];\n      singleVal[\"OI_NR\"] = element[\"OI_NR\"];\n      singleVal[\"PO_CODE\"] = element[\"PO_CODE\"];\n      singleVal[\"PO_COUNTER\"] = element[\"PO_COUNTER\"];\n\n      _pks.push(singleVal);\n    });\n    return _pks;\n  } //RowSelectEvent\n\n\n  function rowSelectEvent(curRowSelected, allRowsSelected) {\n    var _selectedData = [];\n\n    if (allRowsSelected.length === 0) {\n      //Wenn keine Rows ausgewählt sind\n      setQuantity(0); //Menge auf 0 setzen\n\n      setQuantityColor(\"#088A08\");\n      setSelectedData(undefined);\n      setCsvData([]);\n      return;\n    }\n\n    allRowsSelected.forEach(element => {\n      //Get selected orders\n      _selectedData.push(allData[element.dataIndex]);\n    });\n    updateQuantity(_selectedData);\n    setSelectedData(_selectedData);\n    var _sortedCsvData = _selectedData; //Sortieren der Delta-E Werte von Hell nach Dunkel\n\n    _sortedCsvData.sort(function (a, b) {\n      return b.DELTA_E - a.DELTA_E;\n    });\n\n    setCsvData(_sortedCsvData);\n    return;\n  } //Update quantities\n\n\n  function updateQuantity(selecteDataFromTable) {\n    var quantity = 0;\n\n    if (selecteDataFromTable === undefined || selecteDataFromTable.length === 0) {\n      setQuantity(0);\n      return;\n    }\n\n    selecteDataFromTable.forEach(element => {\n      if (element === undefined || element[\"QUANTITY\"] === undefined) {\n        setQuantity(0);\n        return;\n      }\n\n      quantity += element[\"QUANTITY\"];\n    });\n    setQuantity(quantity);\n    if (quantity > 350) setQuantityColor(\"#FF0040\");else setQuantityColor(\"#088A08\");\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: \"Planungsaufträge\",\n      data: allData,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: updateProdStatus,\n      title: \"Mit Klick auf diesen Button wird eine CSV-Datei mit allen markierten Auftr\\xE4gen erstellt.  Au\\xDFerdem \\xE4ndert sich der Status auf 'in F\\xE4rbung'.\",\n      children: [/*#__PURE__*/_jsxDEV(CSVLink, {\n        data: csvdata,\n        headers: csvheaders,\n        style: {\n          textDecoration: \"none\",\n          color: \"black\"\n        },\n        filename: \"MachineConfiguration.csv\",\n        children: \"In F\\xE4rbung (CSV)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(GetAppIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"text\", {\n      name: \"DummySeperator\",\n      children: \"  \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: inDruckStatus,\n      title: \"Mit Klick auf diesen Button werden alle markierten Planungsauftr\\xE4ge in den Druck gegeben.\",\n      children: \"In Druck geben\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 265,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ERPOrders, \"X3l50+1WR9/Z+OuvSkGQWMDCu78=\");\n\n_c = ERPOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ERPOrders\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ERPOrders.js"],"names":["React","useState","useEffect","MUIDataTable","Button","axios","GetAppIcon","ERPOrders","columns","name","label","options","filter","sort","display","filterList","filterDataPoCode","filterData","rowsPerPage","customToolbarSelect","filterType","download","onRowSelectionChange","curRowSelected","allRowsSelected","rowSelectEvent","auswahlBackgroundColor","SetAuswahlBackgroundColor","csvdata","setCsvData","Quantity","setQuantity","QuantityColor","setQuantityColor","csvheaders","allData","setAllData","selectedData","setSelectedData","DatenLaden","get","then","res","console","log","IsDataBaseOffline","data","body","length","undefined","DataAreEqual","catch","err","message","AuswahlChange","newValue","setFilterData","setFilterDataPoCode","errorMessage","endsWith","alert","sortedOrders","join","updateProdStatus","pKs","filterPks","pKs_json","JSON","parse","stringify","put","cssMessage","sleep","inDruckStatus","color","document","getElementsByClassName","style","textAlign","innerHTML","backgroundColor","ms","Promise","resolve","setTimeout","_pks","forEach","element","singleVal","push","_selectedData","dataIndex","updateQuantity","_sortedCsvData","a","b","DELTA_E","selecteDataFromTable","quantity","textDecoration"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nexport default function ERPOrders() {\n\n  const columns = [ {name: \"O_DATE\", label: \"Bestelldatum\", options: {filter: true, sort: true, display: true}}, \n   {name: \"p_nr\", label: \"Produktionsnr\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_NR\", label: \"Bestell-Nr\",  options: {filter: true,  sort: true, display: true}}, \n   {name: \"OI_NR\", label: \"Bestellpos-Nr\", options: {filter: true, sort: true, display: true}},\n   {name: \"PO_CODE\", label: \"PO_CODE\", options: {filter: true,  filterList: filterDataPoCode, sort: true,  display: false}}, \n   {name: \"PO_COUNTER\", label: \"PO_COUNTER\", options: {filter: false, sort: true, display: false}},  \n   {name: \"QUANTITY\", label: \"Menge\", options: {filter: true, sort: true, display: true}}, \n   {name: \"MAT_NR\", label: \"Material-Nr\", options: {filter: false, sort: true, display: false}}, \n   {name: \"C\", label: \"C\", options: {filter: true, sort: false, display: false}},\n   {name: \"M\", label: \"M\",options: {filter: true,sort: false,display: false}},\n   {name: \"Y\",label: \"Y\",options: {filter: true,sort: false, display: false}},\n   {name: \"K\", label: \"K\", options: {filter: true,sort: false, display: false}},   \n   {name: \"PROD_PRIO\", label: \"Priorität\", options: {filter: true,sort: true, display: true}},\n   {name: \"HEXCOLOR\", label: \"Hex-Wert\", options: {filter: true, filterList: filterData, sort: true, display: true}},\n   {name: \"DELTA_E\", label: \"Helligkeit\", options: {filter: true,sort: true, display: true}},\n   {name: \"CUSTOMER_TYPE\", label: \"Kundentyp\", options: {filter: true, sort: true, display: true}}, \n   {name: \"IMAGE\", label: \"Image\", options: {filter: true,sort: true, display: true}},\n   {name: \"PROD_STATUS\", label: \"Status\", options: {filter: false, sort: true, display: true}}, \n   {name: \"END_DATE\",label: \"END_DATE\",options: {filter: false,sort: false, display: false}}];\n\n  const options = {rowsPerPage: 5, customToolbarSelect: () => { }, filterType: 'checkbox', download: false, \n   onRowSelectionChange : (curRowSelected, allRowsSelected) => {rowSelectEvent(curRowSelected, allRowsSelected); }};\n  const [auswahlBackgroundColor, SetAuswahlBackgroundColor] = useState(\"#d8dce4\");            \n  const [csvdata, setCsvData] = useState([]); \n  const [Quantity, setQuantity] = useState(\"\");\n  const [QuantityColor, setQuantityColor] = useState(\"#ffffff\");\n  const csvheaders = [\"OI_NR\", \"O_DATE\", \"p_nr\", \"QUANTITY\", \"HEXCOLOR\",\"DELTA_E\", \"C\", \"M\", \"Y\", \"K\", \"IMAGE\"];\n  \n  const [allData, setAllData] = useState([]); \n  const [selectedData, setSelectedData] =  useState([]); \n\n  //Event if data changed\n  useEffect(() => { DatenLaden(); });\n  \n  //Load data\n  function DatenLaden(){\n    axios.get('https://1ygz8xt0rc.execute-api.eu-central-1.amazonaws.com/main/getplanningorders')\n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n    \n    if(IsDataBaseOffline(res)) return; //Check if database is available\n\n    if(res.data.body.length === 0) { //Check if data is available\n      setAllData(undefined);\n      setCsvData([]);\n      return;\n    }\n\n    if (DataAreEqual(allData, res.data.body)) return; //Check if data has changed       \n    setAllData(res.data.body); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n  }\n\n  //TabAuswahl Change Event\n  function AuswahlChange(newValue){\n   \n      if (newValue === \"Alle\" ) { SetAuswahlBackgroundColor([\"#d8dce4\"]); setFilterData([]); setFilterDataPoCode([]); return;}\n      //SetAuswahlBackgroundColor(newValue); //Background color change  \n      setFilterData([newValue])\n      setFilterDataPoCode([\"N\", \"Q\", \"R\"]);\n\n  }\n\n  //Check if database is offline (AWS)\n  function IsDataBaseOffline(res){\n      if(res.data.errorMessage == null) return false; \n      if(res.data.errorMessage === 'undefined') return false;\n      if(res.data.errorMessage.endsWith(\"timed out after 3.00 seconds\")){\n          alert(\"Database is offline (AWS).\");\n          return true;\n      }     \n      return false;\n    }\n\n  //Check if old data = new data\n  function DataAreEqual(data, sortedOrders){\n    if(data.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n    }\n\n //Update status in planning to in production\n  function updateProdStatus(){  \n      \n    if (selectedData == null || selectedData === undefined || selectedData.length === 0) {\n        alert(\"Bitte Positionen auswählen!\");\n        return;\n      }\n\n    var pKs = filterPks(selectedData);\n    var pKs_json = JSON.parse(JSON.stringify(pKs));\n\n    console.log(pKs_json);\n\n    //Update V&V Status\n    axios.put(\"https://hfmbwiwpid.execute-api.eu-central-1.amazonaws.com/sales/orders/orderitems?status=3\", pKs_json)\n    .then(res => {\n      console.log(res);\n\n    })\n    .catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n\n    //Update Production table from Prod_status 0 to 1 (In Planung zu In Färbung)\n    axios.put(\"https://1ygz8xt0rc.execute-api.eu-central-1.amazonaws.com/main/updateplanningtoprod\", pKs_json)\n    .then(res => {\n      console.log(res);\n      cssMessage(\"Erfolgreich in die Färbung gegeben.\", \"#4dff88\");\n    })\n    .catch(err => {\n      console.log(err.message); //Error-Handling\n      cssMessage(\"Error.\", \"#9c2c2c\");\n    }); \n\n    sleep(900).then(() => { \n      setSelectedData(undefined); \n      DatenLaden(); \n      \n    }); \n     \n    return;\n}\n\n//Update to 'in Druck'\nfunction inDruckStatus(){\n\n  if (selectedData == null || selectedData === undefined || selectedData.length === 0) {\n    alert(\"Bitte Positionen auswählen!\");\n    return;\n  }\n\n  var pKs = filterPks(selectedData);\n  var pKs_json = JSON.parse(JSON.stringify(pKs));\n  console.log(pKs_json)\n\n  //Update Production table from 'In Planung' to 'In Druck'\n   axios.put(\"https://1ygz8xt0rc.execute-api.eu-central-1.amazonaws.com/main/updatefaerbeorders\", pKs_json)\n  .then(res => {\n    console.log(res);\n    cssMessage(\"Erfolgreich in den Druck gegeben.\", \"#4dff88\"); \n  })\n  .catch(err => {\n    console.log(err.message); //Error-Handling\n    cssMessage(\"Error.\", \"#9c2c2c\"); \n  })  \n\n  sleep(900).then(() => { //Reload data\n    setSelectedData(undefined); \n    DatenLaden(); \n  }); \n\nreturn;\n}\n\n//Success and error messages\nfunction cssMessage(message, color)\n{ //Set\n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"center\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = message;\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = color;\n\n  //Reset\n  sleep(2200).then(() => { \n  document.getElementsByClassName(\"footer\")[0].style.textAlign = \"right\";\n  document.getElementsByClassName(\"footer\")[0].innerHTML = \"Powered by ©BlackForestConsulting\";\n  document.getElementsByClassName(\"footer\")[0].style.backgroundColor = \"#90caf9\";\n  });\n}\n\n//Sleep for asynchronous calls\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n//Get only primary keys from selected orders\nfunction filterPks(selectedData){\n  var _pks = [];\n \n  selectedData.forEach(element => {\n    var singleVal = {};\n    singleVal[\"O_NR\"] = element[\"O_NR\"];\n    singleVal[\"OI_NR\"] = element[\"OI_NR\"];\n    singleVal[\"PO_CODE\"] = element[\"PO_CODE\"];\n    singleVal[\"PO_COUNTER\"] = element[\"PO_COUNTER\"];\n    _pks.push(singleVal);\n  });\n\n  return _pks; \n}\n\n\n//RowSelectEvent\nfunction rowSelectEvent(curRowSelected, allRowsSelected){ \n\n  var _selectedData = [];\n\n  if(allRowsSelected.length === 0) {  //Wenn keine Rows ausgewählt sind\n    setQuantity(0); //Menge auf 0 setzen\n    setQuantityColor(\"#088A08\");\n    setSelectedData(undefined);\n    setCsvData([]);\n    return;\n  }\n  \n  allRowsSelected.forEach(element => { //Get selected orders\n    _selectedData.push(allData[element.dataIndex])\n  });\n\n  updateQuantity(_selectedData);\n  setSelectedData(_selectedData);\n\n  var _sortedCsvData = _selectedData;\n\n  //Sortieren der Delta-E Werte von Hell nach Dunkel\n  _sortedCsvData.sort(function(a,b){\n    return b.DELTA_E - a.DELTA_E;\n  });\n\n  setCsvData(_sortedCsvData);\n  return;\n}\n\n//Update quantities\nfunction updateQuantity(selecteDataFromTable){\n\n  var quantity = 0\n\n  if (selecteDataFromTable === undefined || selecteDataFromTable.length === 0) {\n      setQuantity(0)\n      return;\n  }\n\n  selecteDataFromTable.forEach(element => {\n    if (element === undefined || element[\"QUANTITY\"] === undefined ) {\n      setQuantity(0)\n      return;\n    }\n\n    quantity += element[\"QUANTITY\"]\n  });\n  setQuantity(quantity)\n\n  if(quantity > 350) setQuantityColor(\"#FF0040\");\n  else setQuantityColor(\"#088A08\");\n\n  return;\n}\n\n  return (\n  <div>\n    \n    <MUIDataTable \n        title={\"Planungsaufträge\"}\n        data={allData}      \n        columns={columns}\n        options={options}/>\n    <br/>\n    <br/>\n    <Button variant=\"contained\" onClick={updateProdStatus} title=\"Mit Klick auf diesen Button wird eine CSV-Datei mit allen markierten Aufträgen erstellt. \n    Außerdem ändert sich der Status auf 'in Färbung'.\">\n    <CSVLink data={csvdata} headers={csvheaders} style={{textDecoration: \"none\", color: \"black\"}} filename={\"MachineConfiguration.csv\"}>In Färbung (CSV)</CSVLink>\n    <GetAppIcon/>  \n    </Button>  \n    <text name=\"DummySeperator\">  </text>\n    <Button variant=\"contained\" onClick={inDruckStatus} title=\"Mit Klick auf diesen Button werden alle markierten Planungsaufträge in den Druck gegeben.\" >In Druck geben</Button>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}