{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Chart.js\";\nimport * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis, BarSeries, Title, Legend } from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row'\n  }\n});\n\nconst legendRootBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Root, { ...restProps,\n  className: classes.root\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 17,\n  columnNumber: 3\n}, this);\n\nconst Root = withStyles(legendStyles, {\n  name: 'LegendRoot'\n})(legendRootBase);\n\nconst legendLabelStyles = () => ({\n  label: {\n    whiteSpace: 'nowrap'\n  }\n});\n\nconst legendLabelBase = ({\n  classes,\n  ...restProps\n}) => /*#__PURE__*/_jsxDEV(Legend.Label, {\n  className: classes.label,\n  ...restProps\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 26,\n  columnNumber: 3\n}, this);\n\nconst Label = withStyles(legendLabelStyles, {\n  name: 'LegendLabel'\n})(legendLabelBase);\nexport default class DashboardChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: []\n    }; //Statistik laden\n\n    axios.get('http://0.0.0.0:8080/getChartData')\n    /*.then(\n        (res) => {\n            console.log(\"CHARTDATA:\", res.data);\n            return res.data;\n        }\n    ) */\n    .then(res => {\n      console.log(\"CHARTDATA:\", res.data);\n      if (res.data === undefined || res.data.length === 0) return;\n      var data = [];\n\n      for (var i = 0; i < res.data.length; i += 1) {\n        data.push({\n          \"D_DATE\": res.data[i][0],\n          \"NumberOrderArrivals\": res.data[i][1],\n          \"NumberOrderFinish\": res.data[i][2]\n        });\n      }\n\n      console.log(data); //this.setState({data: data });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      children: /*#__PURE__*/_jsxDEV(Chart, {\n        data: this.state.data,\n        children: [/*#__PURE__*/_jsxDEV(ArgumentAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ValueAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          name: \"Eing\\xE4nge\",\n          valueField: \"NumberOrderArrivals\",\n          argumentField: \"D_DATE\",\n          color: \"#808080\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(BarSeries, {\n          name: \"Abschl\\xFCsse\",\n          valueField: \"NumberOrderFinish\",\n          argumentField: \"D_DATE\",\n          color: \"#006064\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Animation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Legend, {\n          position: \"bottom\",\n          rootComponent: Root,\n          labelComponent: Label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          text: \"Anzahl Autr\\xE4ge letzte 14 Tage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Stack, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Dashboard/Chart.js"],"names":["React","Paper","Chart","ArgumentAxis","ValueAxis","BarSeries","Title","Legend","withStyles","Stack","Animation","axios","legendStyles","root","display","margin","flexDirection","legendRootBase","classes","restProps","Root","name","legendLabelStyles","label","whiteSpace","legendLabelBase","Label","DashboardChart","PureComponent","constructor","props","state","data","get","then","res","console","log","undefined","length","i","push","catch","error","render"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport { Chart, ArgumentAxis, ValueAxis,BarSeries,Title,Legend} from '@devexpress/dx-react-chart-material-ui';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Stack, Animation } from '@devexpress/dx-react-chart';\nimport axios from 'axios';\n\n\nconst legendStyles = () => ({\n  root: {\n    display: 'flex',\n    margin: 'auto',\n    flexDirection: 'row',\n  },\n});\nconst legendRootBase = ({ classes, ...restProps }) => (\n  <Legend.Root {...restProps} className={classes.root} />\n);\nconst Root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\nconst legendLabelStyles = () => ({\n  label: {\n    whiteSpace: 'nowrap',\n  },\n});\nconst legendLabelBase = ({ classes, ...restProps }) => (\n  <Legend.Label className={classes.label} {...restProps} />\n);\nconst Label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\n\n\nexport default class DashboardChart extends React.PureComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n    };\n    //Statistik laden\n    axios.get('http://0.0.0.0:8080/getChartData')\n    /*.then(\n        (res) => {\n            console.log(\"CHARTDATA:\", res.data);\n            return res.data;\n        }\n    ) */\n    .then(\n        (res) => {\n            console.log(\"CHARTDATA:\", res.data);\n            if (res.data === undefined || res.data.length === 0) return; \n\n            var data = [];\n\n            for (var i = 0;  i < res.data.length; i+=1 )       \n            {   \n                data.push({\"D_DATE\": res.data[i][0], \"NumberOrderArrivals\": res.data[i][1], \"NumberOrderFinish\": res.data[i][2]});\n             \n            }\n            \n            console.log(data);\n\n            //this.setState({data: data });\n        }\n    )\n    .catch(\n        (error) => {\n          console.log(error);\n        }\n    );\n  };\n  render() {\n    return (\n      <Paper>\n        <Chart\n          data={this.state.data}\n        >\n          <ArgumentAxis />\n          <ValueAxis />\n          <BarSeries\n            name=\"Eingänge\"\n            valueField=\"NumberOrderArrivals\"\n            argumentField=\"D_DATE\"\n            color=\"#808080\"\n          />\n          <BarSeries\n            name=\"Abschlüsse\"\n            valueField=\"NumberOrderFinish\"\n            argumentField=\"D_DATE\"\n            color=\"#006064\"\n          />\n          <Animation />\n          <Legend position=\"bottom\" rootComponent={Root} labelComponent={Label} />\n          <Title text=\"Anzahl Auträge letzte 14 Tage\" />\n          <Stack />\n        </Chart>\n      </Paper>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}