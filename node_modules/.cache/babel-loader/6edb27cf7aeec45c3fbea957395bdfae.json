{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ERPOrders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ERPOrders() {\n  _s();\n\n  const columns = [{\n    name: \"O_ID\",\n    label: \"Order-Nr\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_TIMESTAMP\",\n    label: \"Zeit\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_PRIO\",\n    label: \"Priorität\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_IDFROM\",\n    label: \"O_WH_IDFROM\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_IDTO\",\n    label: \"O_WH_IDTO\",\n    options: {\n      filter: false,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"O_WH_COORDINATEFROM\",\n    label: \"O_WH_COORDINATEFROM\",\n    options: {\n      filter: true,\n      sort: true,\n      display: true\n    }\n  }, {\n    name: \"O_WH_COORDINATETO\",\n    label: \"O_WH_COORDINATETO\",\n    options: {\n      filter: false,\n      sort: true,\n      display: false\n    }\n  }, {\n    name: \"O_FT_IDREQUIREMENT\",\n    label: \"O_FT_IDREQUIREMENT\",\n    options: {\n      filter: true,\n      sort: false,\n      display: false\n    }\n  }, {\n    name: \"O_OS_ID\",\n    label: \"O_OS_ID\",\n    options: {\n      filter: true,\n      sort: false,\n      display: false\n    }\n  }];\n  const options = {\n    rowsPerPage: 5,\n    customToolbarSelect: () => {},\n    filterType: 'checkbox',\n    download: false,\n    onRowSelectionChange: (curRowSelected, allRowsSelected) => {\n      rowSelectEvent(curRowSelected, allRowsSelected);\n    }\n  };\n  const [allData, setAllData] = useState([]);\n  const [selectedData, setSelectedData] = useState([]); //Event if data changed\n\n  useEffect(() => {\n    DatenLaden();\n  }); //Load data\n\n  function DatenLaden() {\n    axios.get('http://0.0.0.0:8080/getDBOrders').then(res => {\n      console.log(\"RESPONSE:\", res); //Data from Gateway\n\n      if (res.data.body.length === 0) {\n        //Check if data is available\n        setAllData(undefined);\n        return;\n      }\n\n      if (DataAreEqual(allData, res.data.body)) return; //Check if data has changed       \n\n      setAllData(res.data.body); //Set new table data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  } //Check if old data = new data\n\n\n  function DataAreEqual(data, sortedOrders) {\n    if (data.sort().join(',') === sortedOrders.sort().join(',')) {\n      return true;\n    } else return false;\n  }\n\n  function SubmitOrders() {\n    console.log(\"Ausgewählte Datensätze:\", selectedData);\n    console.log(\"Ausgewählte PKs:\", filterPks(selectedData));\n  } //Get only primary keys from selected orders\n\n\n  function filterPks(selectedData) {\n    var _pks = []; //TODO: RICHTIGE PKS nehmen\n\n    /*selectedData.forEach(element => {\n      var singleVal = {};\n      singleVal[\"O_NR\"] = element[\"O_NR\"];\n      singleVal[\"OI_NR\"] = element[\"OI_NR\"];\n      singleVal[\"PO_CODE\"] = element[\"PO_CODE\"];\n      singleVal[\"PO_COUNTER\"] = element[\"PO_COUNTER\"];\n      _pks.push(singleVal);\n    }); */\n\n    return _pks;\n  } //RowSelectEvent\n\n\n  function rowSelectEvent(curRowSelected, allRowsSelected) {\n    var _selectedData = [];\n\n    if (allRowsSelected.length === 0) {\n      //Wenn keine Rows ausgewählt sind\n      setSelectedData(undefined);\n      return;\n    }\n\n    allRowsSelected.forEach(element => {\n      //Get selected orders\n      _selectedData.push(allData[element.dataIndex]);\n    });\n    setSelectedData(_selectedData);\n    return;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    align: \"left\",\n    children: [/*#__PURE__*/_jsxDEV(MUIDataTable, {\n      title: \"Transportaufträge\",\n      data: allData,\n      columns: columns,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: SubmitOrders,\n      title: \"Mit Klick auf diesen Button werden alle ausgew\\xE4hlten Transportauftr\\xE4ge \\xFCbermittelt.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ERPOrders, \"llTBpHV7Y5cZtkKg3BL5C+Lz1U8=\");\n\n_c = ERPOrders;\n\nvar _c;\n\n$RefreshReg$(_c, \"ERPOrders\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders/ERPOrders.js"],"names":["React","useState","useEffect","MUIDataTable","Button","axios","ERPOrders","columns","name","label","options","filter","sort","display","rowsPerPage","customToolbarSelect","filterType","download","onRowSelectionChange","curRowSelected","allRowsSelected","rowSelectEvent","allData","setAllData","selectedData","setSelectedData","DatenLaden","get","then","res","console","log","data","body","length","undefined","DataAreEqual","catch","err","message","sortedOrders","join","SubmitOrders","filterPks","_pks","_selectedData","forEach","element","push","dataIndex"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport MUIDataTable from \"mui-datatables\";\nimport Button from '@material-ui/core/Button';\nimport axios from \"axios\";\n\nexport default function ERPOrders() {\n\n  const columns = [ \n   {name: \"O_ID\", label: \"Order-Nr\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_TIMESTAMP\", label: \"Zeit\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_PRIO\", label: \"Priorität\",  options: {filter: true,  sort: true, display: true}}, \n   {name: \"O_WH_IDFROM\", label: \"O_WH_IDFROM\", options: {filter: true, sort: true, display: true}},\n   {name: \"O_WH_IDTO\", label: \"O_WH_IDTO\", options: {filter: false, sort: true, display: false}},  \n   {name: \"O_WH_COORDINATEFROM\", label: \"O_WH_COORDINATEFROM\", options: {filter: true, sort: true, display: true}}, \n   {name: \"O_WH_COORDINATETO\", label: \"O_WH_COORDINATETO\", options: {filter: false, sort: true, display: false}}, \n   {name: \"O_FT_IDREQUIREMENT\", label: \"O_FT_IDREQUIREMENT\", options: {filter: true, sort: false, display: false}},\n   {name: \"O_OS_ID\", label: \"O_OS_ID\",options: {filter: true,sort: false,display: false}} \n   ];\n\n  const options = {rowsPerPage: 5, customToolbarSelect: () => { }, filterType: 'checkbox', download: false, \n   onRowSelectionChange : (curRowSelected, allRowsSelected) => {rowSelectEvent(curRowSelected, allRowsSelected); }};\n  \n  const [allData, setAllData] = useState([]); \n  const [selectedData, setSelectedData] =  useState([]); \n\n  //Event if data changed\n  useEffect(() => { DatenLaden(); });\n  \n  //Load data\n  function DatenLaden(){\n    axios.get('http://0.0.0.0:8080/getDBOrders')\n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n\n    if(res.data.body.length === 0) { //Check if data is available\n      setAllData(undefined);\n      return;\n    }\n\n    if (DataAreEqual(allData, res.data.body)) return; //Check if data has changed       \n    setAllData(res.data.body); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n  }\n\n  //Check if old data = new data\n  function DataAreEqual(data, sortedOrders){\n    if(data.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n    }\n\n    function SubmitOrders() {\n        console.log(\"Ausgewählte Datensätze:\", selectedData);\n        console.log(\"Ausgewählte PKs:\", filterPks(selectedData));\n    }\n\n\n//Get only primary keys from selected orders\nfunction filterPks(selectedData){\n  var _pks = [];\n //TODO: RICHTIGE PKS nehmen\n  /*selectedData.forEach(element => {\n    var singleVal = {};\n    singleVal[\"O_NR\"] = element[\"O_NR\"];\n    singleVal[\"OI_NR\"] = element[\"OI_NR\"];\n    singleVal[\"PO_CODE\"] = element[\"PO_CODE\"];\n    singleVal[\"PO_COUNTER\"] = element[\"PO_COUNTER\"];\n    _pks.push(singleVal);\n  }); */ \n\n  return _pks; \n}\n\n\n//RowSelectEvent\nfunction rowSelectEvent(curRowSelected, allRowsSelected){ \n\n  var _selectedData = [];\n\n  if(allRowsSelected.length === 0) {  //Wenn keine Rows ausgewählt sind\n    setSelectedData(undefined);\n    return;\n  }\n  \n  allRowsSelected.forEach(element => { //Get selected orders\n    _selectedData.push(allData[element.dataIndex])\n  });\n\n  setSelectedData(_selectedData);\n\n  return;\n}\n\n  return (\n  <div align=\"left\">\n    \n    <MUIDataTable \n        title={\"Transportaufträge\"}\n        data={allData}      \n        columns={columns}\n        options={options}/>\n    <br/>\n    <br/>\n    <Button variant=\"contained\" onClick={SubmitOrders} title=\"Mit Klick auf diesen Button werden alle ausgewählten Transportaufträge übermittelt.\"/>\n   \n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}