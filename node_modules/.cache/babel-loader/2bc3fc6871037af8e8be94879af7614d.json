{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/ManageRobots.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, forwardRef } from \"react\"; //import axios from \"axios\";\n\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ManageRobots() {\n  _s();\n\n  //Event if data changed  \n  useEffect(() => {\n    LoadRobots();\n  });\n  const [allData, setAllData] = useState([]);\n  const [columnsRobots\n  /* setColumnsColors */\n  ] = useState([{\n    title: 'AGV-ID',\n    field: 'A_ID',\n    editable: 'never'\n  }, {\n    title: 'AGV-Bez',\n    field: 'chargen_nr',\n    editable: 'never'\n  }, {\n    title: 'Menge',\n    field: 'quantity',\n    editable: 'never'\n  }, {\n    title: 'Restmenge',\n    field: 'RES_QTY',\n    editable: 'onUpdate',\n    cellStyle: {\n      border: \"5px, #000000\",\n      fontWeight: \"bold\",\n      fontStyle: \"italic\",\n      backgroundColor: \"#e3e3e3\"\n    }\n  }, {\n    title: 'PPML',\n    field: 'ppml',\n    editable: 'never'\n  }, {\n    title: 'ViskositÃ¤t',\n    field: 'viscosity',\n    editable: 'never'\n  }, {\n    title: 'Delta_e',\n    field: 'delta_e',\n    editable: 'never'\n  }]);\n  const tableIcons = {\n    Add: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(AddBox, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 35\n    }, this)),\n    Check: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Check, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 37\n    }, this)),\n    Clear: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Clear, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 37\n    }, this)),\n    Delete: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(DeleteOutline, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 38\n    }, this)),\n    DetailPanel: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronRight, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 43\n    }, this)),\n    Edit: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Edit, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 36\n    }, this)),\n    Export: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(SaveAlt, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 38\n    }, this)),\n    Filter: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(FilterList, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 38\n    }, this)),\n    FirstPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(FirstPage, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 41\n    }, this)),\n    LastPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(LastPage, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 40\n    }, this)),\n    NextPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronRight, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 40\n    }, this)),\n    PreviousPage: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ChevronLeft, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 44\n    }, this)),\n    ResetSearch: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Clear, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 43\n    }, this)),\n    Search: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Search, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 38\n    }, this)),\n    SortArrow: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ArrowDownward, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 41\n    }, this)),\n    ThirdStateCheck: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(Remove, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 47\n    }, this)),\n    ViewColumn: /*#__PURE__*/forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(ViewColumn, { ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 42\n    }, this))\n  };\n  const options = {\n    rowsPerPage: 5,\n    customToolbarSelect: () => {},\n    selectableRows: false,\n    download: false\n  }; //Load data  \n\n  function LoadRobots() {\n    axios.get('http://0.0.0.0:8080/getAgvSettings').then(res => {\n      console.log(\"RESPONSE:\", res); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        setAllData(undefined);\n        return;\n      }\n\n      if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n\n      console.log(\"Data:\", res.data);\n      setAllData(res.data); //Set new table data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  } //Check if old data = new data\n\n\n  function DataAreEqual(data, sortedOrders) {\n    if (data.sort().join(',') === sortedOrders.sort().join(',')) {\n      return true;\n    } else return false;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '0px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(MaterialTable, {\n      title: \"Roboter\",\n      icons: tableIcons,\n      columns: columnsRobots,\n      data: allData,\n      options: options\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 1\n  }, this);\n}\n\n_s(ManageRobots, \"lpsH6TedcPjMie61umkRs+KZT8A=\");\n\n_c = ManageRobots;\n\nvar _c;\n\n$RefreshReg$(_c, \"ManageRobots\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Robots/ManageRobots.js"],"names":["React","useState","useEffect","forwardRef","MaterialTable","AddBox","ArrowDownward","Check","ChevronLeft","ChevronRight","Clear","DeleteOutline","Edit","FilterList","FirstPage","LastPage","Remove","SaveAlt","Search","ViewColumn","ManageRobots","LoadRobots","allData","setAllData","columnsRobots","title","field","editable","cellStyle","border","fontWeight","fontStyle","backgroundColor","tableIcons","Add","props","ref","Delete","DetailPanel","Export","Filter","NextPage","PreviousPage","ResetSearch","SortArrow","ThirdStateCheck","options","rowsPerPage","customToolbarSelect","selectableRows","download","axios","get","then","res","console","log","data","length","undefined","DataAreEqual","catch","err","message","sortedOrders","sort","join","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, forwardRef } from \"react\";\n//import axios from \"axios\";\nimport MaterialTable from 'material-table';\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\n\nexport default function ManageRobots() {\n\n//Event if data changed  \nuseEffect(() => { LoadRobots(); });\n\nconst [allData, setAllData] = useState([]); \n  \n\nconst [columnsRobots, /* setColumnsColors */] = useState([\n    { title: 'AGV-ID', field: 'A_ID', editable: 'never' },\n    { title: 'AGV-Bez', field: 'chargen_nr', editable: 'never' },\n    { title: 'Menge', field: 'quantity', editable: 'never' },\n    { title: 'Restmenge', field: 'RES_QTY', editable: 'onUpdate', cellStyle: {border: \"5px, #000000\", fontWeight: \"bold\", fontStyle: \"italic\", backgroundColor: \"#e3e3e3\"} },\n    { title: 'PPML', field: 'ppml', editable: 'never' },\n    { title: 'ViskositÃ¤t', field: 'viscosity', editable: 'never' },\n    { title: 'Delta_e', field: 'delta_e', editable: 'never' },\n  ]);\n\nconst tableIcons = {\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n  SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n};\n\nconst options = {rowsPerPage: 5, customToolbarSelect: () => { }, selectableRows: false, download: false };\n\n//Load data  \nfunction LoadRobots(){\n\n    axios.get('http://0.0.0.0:8080/getAgvSettings') \n    .then(res => {\n    console.log(\"RESPONSE:\", res); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n      setAllData(undefined);\n      return;\n    }\n\n    if (DataAreEqual(allData, res.data)) return; //Check if data has changed    \n    console.log(\"Data:\", res.data);    \n    setAllData(res.data); //Set new table data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    }) \n}\n\n\n  //Check if old data = new data\n  function DataAreEqual(data, sortedOrders){\n  if(data.sort().join(',') === sortedOrders.sort().join(',')){\n    return true;\n    }\n    else return false;\n  } \n\n\n\n  return (\n<div style={{ padding: '0px'}}>\n  <MaterialTable\n        title=\"Roboter\"\n        icons={tableIcons}\n        columns={columnsRobots}\n        data={allData} \n        options={options}/>\n  <br></br>\n</div>\n\n  );\n}\n"]},"metadata":{},"sourceType":"module"}