{"ast":null,"code":"var _jsxFileName = \"/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport TabChange from './Orders/TabChange.js';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Orders() {\n  _s();\n\n  const [allData, setAllData] = useState([]);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      getTaskStates();\n    }, 2000);\n    return () => clearInterval(interval);\n  }, []);\n\n  function getTaskStates() {\n    getSessionId();\n    axios.get('http://0.0.0.0:8080/task_list').then(res => {\n      console.log(\"Tasks:\", res.data); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        return;\n      }\n\n      var newData = [];\n      res.data.forEach(element => {\n        //Convert response to right format\n        newData.push(element);\n      });\n      if (DataAreEqual(allData, newData)) return; //Check if data has changed   \n\n      updateOrderStatus(allData, newData); //Update Status of new orders\n\n      setAllData(newData); //Set new Data\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  }\n\n  function sleep(ms) {\n    return new Promise(resolve => setTimeout(resolve, ms));\n  }\n\n  function updateOrderStatus(oldData, newData) {\n    //TODO : Hier in Zukunft nur die neuen Änderungen. Dazu OldData mit NewData vergleichen.\n    //Aktuell werden noch alle genommen.\n    sessionId;\n    axios.get('http://0.0.0.0:8080/getSessionId').then(res => {\n      console.log(\"SessionId:\", res.data); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        return;\n      }\n\n      sessionId = res.data;\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n    sleep(1500).then(() => {\n      console.log(\"S_ID:\", sessionId);\n      newData.forEach(element => {\n        var statusNr; //STATUS Überprüfen, ob sie passen -> Pending ?! \n\n        if (element['state'] === \"Pending\") statusNr = 1; //open\n        else if (element['state'] === \"Active/Executing\") statusNr = 2; //in progress\n          else if (element['state'] === \"Completed\") statusNr = 3; // Finished\n            else if (element['state'] === \"Active/Cancelled\") statusNr = 4; //canceled\n              else if (element['state'] === \"Queued\") statusNr = 5; //waiting\n                else if (element['state'] === \"Failed\") statusNr = 6; //Fehler\n\n        console.log(\"SessionID vor dem verschicken\", sessionId);\n        var obj = {\n          \"status\": statusNr,\n          \"session_id\": sessionId,\n          \"task_id\": element[\"task_id\"]\n        };\n        console.log(\"PUT OBJ:\", obj);\n        axios.put('http://0.0.0.0:8080/updateOrderStatus', obj).then(res => {\n          if (res.data === undefined || res.data.length === 0) return;\n          console.log(\"Response:\", res.data);\n        }).catch(err => {\n          console.log(err.message); //Error-Handling\n\n          alert(\"Fehler beim Auftrag übermitteln.\");\n        });\n      });\n    });\n  } //Check if old data = new data\n\n\n  function DataAreEqual(inputData, sortedOrders) {\n    if (inputData.sort().join(',') === sortedOrders.sort().join(',')) {\n      return true;\n    } else return false;\n  }\n\n  function getSessionId() {\n    axios.get('http://0.0.0.0:8080/getSessionId').then(res => {\n      console.log(\"SessionId:\", res.data); //Data from Gateway\n\n      if (res.data.length === 0) {\n        //Check if data is available\n        return;\n      }\n\n      return res.data;\n    }).catch(err => {\n      console.log(err.message); //Error-Handling\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TabChange, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 10\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Orders, \"wvSF2ckxQjUNASfZMrdtN9Q7fbY=\");\n\n_c = Orders;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orders\");","map":{"version":3,"sources":["/home/flitzmofinal/GitHub/Leitsteuerung_Panel/src/components/Orders.js"],"names":["React","useState","useEffect","TabChange","axios","Orders","allData","setAllData","interval","setInterval","getTaskStates","clearInterval","getSessionId","get","then","res","console","log","data","length","newData","forEach","element","push","DataAreEqual","updateOrderStatus","catch","err","message","sleep","ms","Promise","resolve","setTimeout","oldData","sessionId","statusNr","obj","put","undefined","alert","inputData","sortedOrders","sort","join"],"mappings":"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","sourcesContent":["import React, { useState, useEffect} from \"react\";\nimport TabChange from './Orders/TabChange.js';\nimport axios from \"axios\";\n \n\nexport default function Orders() {\n\nconst [allData, setAllData] = useState([]);\n\nuseEffect(() => {\n   \n\n    const interval = setInterval(() => { getTaskStates() }, 2000)\n    return ()=> clearInterval(interval)\n  }, []);\n  \n\nfunction getTaskStates(){\n\n    getSessionId();\n\n    axios.get('http://0.0.0.0:8080/task_list')\n    .then(res => {\n    console.log(\"Tasks:\", res.data); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n     \n      return;\n    }\n\n    var newData = [];\n\n    res.data.forEach(element => { //Convert response to right format\n        newData.push(element)\n    });\n\n    if (DataAreEqual(allData, newData)) return; //Check if data has changed   \n\n    updateOrderStatus(allData, newData); //Update Status of new orders\n\n    setAllData(newData); //Set new Data\n\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n}\n\nfunction sleep(ms) {\n  return new Promise(resolve => setTimeout(resolve, ms));\n}\n\n\n  function updateOrderStatus(oldData, newData){  \n\n    //TODO : Hier in Zukunft nur die neuen Änderungen. Dazu OldData mit NewData vergleichen.\n    //Aktuell werden noch alle genommen.\n\n    sessionId;\n\n      axios.get('http://0.0.0.0:8080/getSessionId')\n      .then(res => {\n      console.log(\"SessionId:\", res.data); //Data from Gateway\n\n      if(res.data.length === 0) { //Check if data is available\n      \n        return;\n      }\n      \n      sessionId = res.data;\n\n      })\n      .catch(err => {\n          console.log(err.message); //Error-Handling\n      })\n\n\n    sleep(1500).then(() => { \n\n      console.log(\"S_ID:\", sessionId)\n\n    newData.forEach(element => {\n\n        var statusNr;\n\n        //STATUS Überprüfen, ob sie passen -> Pending ?! \n        if(element['state'] === \"Pending\") statusNr = 1; //open\n        else if(element['state'] === \"Active/Executing\") statusNr = 2; //in progress\n        else if(element['state'] === \"Completed\") statusNr = 3; // Finished\n        else if(element['state'] === \"Active/Cancelled\") statusNr = 4; //canceled\n        else if(element['state'] === \"Queued\") statusNr = 5; //waiting\n        else if(element['state'] === \"Failed\") statusNr = 6; //Fehler\n       \n        console.log(\"SessionID vor dem verschicken\", sessionId)\n\n        var obj = {\"status\": statusNr, \"session_id\":  sessionId, \"task_id\": element[\"task_id\"]}; \n\n        console.log(\"PUT OBJ:\", obj);\n\n        axios.put('http://0.0.0.0:8080/updateOrderStatus', obj)\n        .then(res => {\n          if(res.data === undefined || res.data.length === 0)  return;\n        console.log(\"Response:\", res.data);\n        \n      \n        })\n        .catch(err => {\n            console.log(err.message); //Error-Handling\n            alert(\"Fehler beim Auftrag übermitteln.\");  \n      \n        })  \n        \n    });\n  });\n\n  } \n\n\n  //Check if old data = new data\n  function DataAreEqual(inputData, sortedOrders){\n    if(inputData.sort().join(',') === sortedOrders.sort().join(',')){\n      return true;\n      }\n      else return false;\n   }\n\n\n   function getSessionId(){\n\n    axios.get('http://0.0.0.0:8080/getSessionId')\n    .then(res => {\n    console.log(\"SessionId:\", res.data); //Data from Gateway\n\n    if(res.data.length === 0) { //Check if data is available\n     \n      return;\n    }\n    \n    return res.data\n\n    })\n    .catch(err => {\n        console.log(err.message); //Error-Handling\n    })\n\n    }\n\n\n\n    return (\n        <div >\n         <TabChange/>\n        </div>\n    );\n\n}\n"]},"metadata":{},"sourceType":"module"}